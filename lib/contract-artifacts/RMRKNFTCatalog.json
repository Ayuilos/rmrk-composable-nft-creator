{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "metadataURI", "type": "string", "internalType": "string" },
        { "name": "type_", "type": "string", "internalType": "string" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addEquippableAddresses",
      "inputs": [
        { "name": "partId", "type": "uint64", "internalType": "uint64" },
        {
          "name": "equippableAddresses",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addPart",
      "inputs": [
        {
          "name": "intakeStruct",
          "type": "tuple",
          "internalType": "struct IRMRKCatalog.IntakeStruct",
          "components": [
            { "name": "partId", "type": "uint64", "internalType": "uint64" },
            {
              "name": "part",
              "type": "tuple",
              "internalType": "struct IRMRKCatalog.Part",
              "components": [
                {
                  "name": "itemType",
                  "type": "uint8",
                  "internalType": "enum IRMRKCatalog.ItemType"
                },
                { "name": "z", "type": "uint8", "internalType": "uint8" },
                {
                  "name": "equippable",
                  "type": "address[]",
                  "internalType": "address[]"
                },
                {
                  "name": "metadataURI",
                  "type": "string",
                  "internalType": "string"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addPartList",
      "inputs": [
        {
          "name": "intakeStructs",
          "type": "tuple[]",
          "internalType": "struct IRMRKCatalog.IntakeStruct[]",
          "components": [
            { "name": "partId", "type": "uint64", "internalType": "uint64" },
            {
              "name": "part",
              "type": "tuple",
              "internalType": "struct IRMRKCatalog.Part",
              "components": [
                {
                  "name": "itemType",
                  "type": "uint8",
                  "internalType": "enum IRMRKCatalog.ItemType"
                },
                { "name": "z", "type": "uint8", "internalType": "uint8" },
                {
                  "name": "equippable",
                  "type": "address[]",
                  "internalType": "address[]"
                },
                {
                  "name": "metadataURI",
                  "type": "string",
                  "internalType": "string"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "checkIsEquippable",
      "inputs": [
        { "name": "partId", "type": "uint64", "internalType": "uint64" },
        {
          "name": "targetAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        { "name": "isEquippable", "type": "bool", "internalType": "bool" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "checkIsEquippableToAll",
      "inputs": [
        { "name": "partId", "type": "uint64", "internalType": "uint64" }
      ],
      "outputs": [
        { "name": "isEquippable", "type": "bool", "internalType": "bool" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLock",
      "inputs": [],
      "outputs": [
        { "name": "isLocked", "type": "bool", "internalType": "bool" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMetadataURI",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPart",
      "inputs": [
        { "name": "partId", "type": "uint64", "internalType": "uint64" }
      ],
      "outputs": [
        {
          "name": "part",
          "type": "tuple",
          "internalType": "struct IRMRKCatalog.Part",
          "components": [
            {
              "name": "itemType",
              "type": "uint8",
              "internalType": "enum IRMRKCatalog.ItemType"
            },
            { "name": "z", "type": "uint8", "internalType": "uint8" },
            {
              "name": "equippable",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "metadataURI",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getParts",
      "inputs": [
        { "name": "partIds", "type": "uint64[]", "internalType": "uint64[]" }
      ],
      "outputs": [
        {
          "name": "parts",
          "type": "tuple[]",
          "internalType": "struct IRMRKCatalog.Part[]",
          "components": [
            {
              "name": "itemType",
              "type": "uint8",
              "internalType": "enum IRMRKCatalog.ItemType"
            },
            { "name": "z", "type": "uint8", "internalType": "uint8" },
            {
              "name": "equippable",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "metadataURI",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getType",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isContributor",
      "inputs": [
        { "name": "contributor", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "isContributor_", "type": "bool", "internalType": "bool" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "manageContributor",
      "inputs": [
        { "name": "contributor", "type": "address", "internalType": "address" },
        { "name": "grantRole", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        { "name": "owner_", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "resetEquippableAddresses",
      "inputs": [
        { "name": "partId", "type": "uint64", "internalType": "uint64" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setEquippableAddresses",
      "inputs": [
        { "name": "partId", "type": "uint64", "internalType": "uint64" },
        {
          "name": "equippableAddresses",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setEquippableToAll",
      "inputs": [
        { "name": "partId", "type": "uint64", "internalType": "uint64" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setLock",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        { "name": "newOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "AddedEquippables",
      "inputs": [
        {
          "name": "partId",
          "type": "uint64",
          "indexed": true,
          "internalType": "uint64"
        },
        {
          "name": "equippableAddresses",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AddedPart",
      "inputs": [
        {
          "name": "partId",
          "type": "uint64",
          "indexed": true,
          "internalType": "uint64"
        },
        {
          "name": "itemType",
          "type": "uint8",
          "indexed": true,
          "internalType": "enum IRMRKCatalog.ItemType"
        },
        {
          "name": "zIndex",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        },
        {
          "name": "equippableAddresses",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ContributorUpdate",
      "inputs": [
        {
          "name": "contributor",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "isContributor",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    { "type": "event", "name": "LockSet", "inputs": [], "anonymous": false },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SetEquippableToAll",
      "inputs": [
        {
          "name": "partId",
          "type": "uint64",
          "indexed": true,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SetEquippables",
      "inputs": [
        {
          "name": "partId",
          "type": "uint64",
          "indexed": true,
          "internalType": "uint64"
        },
        {
          "name": "equippableAddresses",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "RMRKBadConfig", "inputs": [] },
    { "type": "error", "name": "RMRKIdZeroForbidden", "inputs": [] },
    { "type": "error", "name": "RMRKLocked", "inputs": [] },
    {
      "type": "error",
      "name": "RMRKNewContributorIsZeroAddress",
      "inputs": []
    },
    { "type": "error", "name": "RMRKNewOwnerIsZeroAddress", "inputs": [] },
    { "type": "error", "name": "RMRKNotOwner", "inputs": [] },
    { "type": "error", "name": "RMRKNotOwnerOrContributor", "inputs": [] },
    { "type": "error", "name": "RMRKPartAlreadyExists", "inputs": [] },
    { "type": "error", "name": "RMRKPartDoesNotExist", "inputs": [] },
    { "type": "error", "name": "RMRKPartIsNotSlot", "inputs": [] },
    { "type": "error", "name": "RMRKZeroLengthIdsPassed", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162001db238038062001db283398101604081905262000034916200019d565b81818181620000433362000065565b6200004e82620000b5565b6200005981620000c7565b50505050505062000364565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6006620000c3828262000298565b5050565b6007620000c3828262000298565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000fd57600080fd5b81516001600160401b03808211156200011a576200011a620000d5565b604051601f8301601f19908116603f01168101908282118183101715620001455762000145620000d5565b81604052838152602092508660208588010111156200016357600080fd5b600091505b8382101562000187578582018301518183018401529082019062000168565b6000602085830101528094505050505092915050565b60008060408385031215620001b157600080fd5b82516001600160401b0380821115620001c957600080fd5b620001d786838701620000eb565b93506020850151915080821115620001ee57600080fd5b50620001fd85828601620000eb565b9150509250929050565b600181811c908216806200021c57607f821691505b6020821081036200023d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000293576000816000526020600020601f850160051c810160208610156200026e5750805b601f850160051c820191505b818110156200028f578281556001016200027a565b5050505b505050565b81516001600160401b03811115620002b457620002b4620000d5565b620002cc81620002c5845462000207565b8462000243565b602080601f831160018114620003045760008415620002eb5750858301515b600019600386901b1c1916600185901b1785556200028f565b600085815260208120601f198616915b82811015620003355788860151825594840194600190910190840162000314565b5085821015620003545787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611a3e80620003746000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063867cc5c4116100ad578063d297ac4311610071578063d297ac431461026d578063dc477d2f1461028d578063dcb79d56146102b9578063f005548c146102cc578063f2fde38b146102df57600080fd5b8063867cc5c41461020457806386a92af7146102175780638da5cb5b1461021f5780639806c6ec1461023a578063b9cd29591461025a57600080fd5b80637084819a116100f45780637084819a146101c3578063715018a6146101d657806379e8ca9e146101de5780637aba6f37146101f15780637e5852d9146101f957600080fd5b806301ffc9a71461013157806315dae03e146101595780631d0d35f51461016e57806327a964841461019b5780636c508e66146101b0575b600080fd5b61014461013f366004611177565b6102f2565b60405190151581526020015b60405180910390f35b610161610329565b60405161015091906111ee565b61014461017c36600461121d565b6001600160a01b03166000908152600160208190526040909120541490565b6101ae6101a93660046114c4565b6103bb565b005b6101ae6101be366004611500565b6103d7565b6101ae6101d1366004611500565b6103e8565b6101ae6103f9565b6101ae6101ec36600461151b565b61040d565b6101ae6104ca565b600254600114610144565b6101ae610212366004611557565b610502565b61016161051b565b6000546040516001600160a01b039091168152602001610150565b61024d610248366004611607565b61052a565b6040516101509190611767565b6101ae6102683660046117cb565b610750565b61028061027b366004611500565b610766565b6040516101509190611818565b61014461029b366004611500565b6001600160401b031660009081526004602052604090205460ff1690565b6101446102c736600461182b565b6108e6565b6101ae6102da3660046117cb565b610a10565b6101ae6102ed36600461121d565b610a22565b60006001600160e01b031982166301ffc9a760e01b148061032357506001600160e01b0319821663d912401f60e01b145b92915050565b6060600780546103389061185e565b80601f01602080910402602001604051908101604052809291908181526020018280546103649061185e565b80156103b15780601f10610386576101008083540402835291602001916103b1565b820191906000526020600020905b81548152906001019060200180831161039457829003601f168201915b5050505050905090565b6103c3610a5a565b6103cb610a99565b6103d481610abc565b50565b6103df610a5a565b6103d481610cfb565b6103f0610a5a565b6103d481610d52565b610401610ddd565b61040b6000610e08565b565b610415610ddd565b6001600160a01b03821661043c5760405163016b812760e71b815260040160405180910390fd5b80610461576001600160a01b0382166000908152600160205260408120819055610480565b6001600160a01b03821660009081526001602081905260409091208190555b50816001600160a01b03167f4b5657e84cf8a17ac5587bbeb3cc2bab9826c4c67b8bad81b4849de49d37aac2826040516104be911515815260200190565b60405180910390a25050565b6104d2610ddd565b60016002556040517f3e423347941b5c6e8c727e4071ffeb6869244ce75121d6a56ba8356086851c6c90600090a1565b61050a610a5a565b610512610a99565b6103d481610e58565b6060600680546103389061185e565b8051606090806001600160401b0381111561054757610547611238565b6040519080825280602002602001820160405280156105a257816020015b61058f60408051608081019091528060008152600060208201526060604082018190529081015290565b8152602001906001900390816105655790505b50915060005b818110156107495760008482815181106105c4576105c4611898565b6020908102919091018101516001600160401b03811660009081526003909252604091829020825160808101909352805491935090829060ff16600281111561060f5761060f61169e565b60028111156106205761062061169e565b81528154610100900460ff16602080830191909152600183018054604080518285028101850182528281529401939283018282801561068857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161066a575b505050505081526020016002820180546106a19061185e565b80601f01602080910402602001604051908101604052809291908181526020018280546106cd9061185e565b801561071a5780601f106106ef5761010080835404028352916020019161071a565b820191906000526020600020905b8154815290600101906020018083116106fd57829003601f168201915b50505050508152505084838151811061073557610735611898565b6020908102919091010152506001016105a8565b5050919050565b610758610a5a565b6107628282610e94565b5050565b61079060408051608081019091528060008152600060208201526060604082018190529081015290565b6001600160401b038216600090815260036020526040908190208151608081019092528054829060ff1660028111156107cb576107cb61169e565b60028111156107dc576107dc61169e565b81528154610100900460ff16602080830191909152600183018054604080518285028101850182528281529401939283018282801561084457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610826575b5050505050815260200160028201805461085d9061185e565b80601f01602080910402602001604051908101604052809291908181526020018280546108899061185e565b80156108d65780601f106108ab576101008083540402835291602001916108d6565b820191906000526020600020905b8154815290600101906020018083116108b957829003601f168201915b5050505050815250509050919050565b6001600160401b03821660009081526004602052604090205460ff168015801561093c575060016001600160401b03841660009081526003602052604090205460ff16600281111561093a5761093a61169e565b145b15610323576001600160401b0383166000908152600360209081526040808320600101805482518185028101850190935280835291929091908301828280156109ae57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610990575b505083519394506000925050505b81811015610a07578281815181106109d6576109d6611898565b60200260200101516001600160a01b0316856001600160a01b0316036109ff5760019350610a07565b6001016109bc565b50505092915050565b610a18610a5a565b6107628282610f4d565b610a2a610ddd565b6001600160a01b038116610a5157604051634ece6ecf60e01b815260040160405180910390fd5b6103d481610e08565b6000546001600160a01b03163314801590610a7b5750610a793361017c565b155b1561040b576040516301eca16760e41b815260040160405180910390fd5b60025460010361040b5760405163ed1fa96f60e01b815260040160405180910390fd5b805160208201516001600160401b038216610aea576040516312c33ce360e01b815260040160405180910390fd5b6001600160401b03821660009081526003602052604081205460ff166002811115610b1757610b1761169e565b14610b3557604051630fbdf8dd60e01b815260040160405180910390fd5b600081516002811115610b4a57610b4a61169e565b03610b6857604051630b65407360e01b815260040160405180910390fd5b600281516002811115610b7d57610b7d61169e565b148015610b8e575060408101515115155b15610bac57604051630b65407360e01b815260040160405180910390fd5b6001600160401b03821660009081526003602052604090208151815483929190829060ff19166001836002811115610be657610be661169e565b0217905550602082810151825460ff9091166101000261ff001990911617825560408301518051610c1d92600185019201906110e3565b5060608201516002820190610c3290826118fe565b5050600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db06004820401805460039092166008026101000a6001600160401b0381810219909316928616029190911790555080516002811115610ca557610ca561169e565b826001600160401b03167fc4715b52aed3b9dfb2fbdc63e39e234892ec1dd3811d2c671646dbfd3d32d92e836020015184604001518560600151604051610cee939291906119bd565b60405180910390a3505050565b80610d0581611064565b6001600160401b038216600081815260046020526040808220805460ff19166001179055517f540b0b22993accb6c2b7b0f4a5bd1b7e6419708ef2a68c39f09f01c848ba4fbc9190a25050565b80610d5c81611064565b6001600160401b0382166000908152600360205260408120610d8391600190910190611148565b6001600160401b0382166000818152600460209081526040808320805460ff191690558051928352908201908190527f507a75726ac34d3eb68ebf61f034616ee2030c6193bd4a9efb7e131de6c6adcc916104be916119f5565b6000546001600160a01b0316331461040b57604051631c62d58f60e11b815260040160405180910390fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805160005b81811015610e8f57610e87838281518110610e7a57610e7a611898565b6020026020010151610abc565b600101610e5d565b505050565b81610e9e81611064565b6000825111610ec057604051631763fd3d60e21b815260040160405180910390fd5b6001600160401b03831660009081526003602090815260409091208351610eef926001909201918501906110e3565b506001600160401b03831660008181526004602052604090819020805460ff19169055517f507a75726ac34d3eb68ebf61f034616ee2030c6193bd4a9efb7e131de6c6adcc90610f409085906119f5565b60405180910390a2505050565b81610f5781611064565b6000825111610f7957604051631763fd3d60e21b815260040160405180910390fd5b815160005b818110156110055760036000866001600160401b03166001600160401b03168152602001908152602001600020600101848281518110610fc057610fc0611898565b60209081029190910181015182546001808201855560009485529290932090920180546001600160a01b0319166001600160a01b039093169290921790915501610f7e565b506001600160401b03841660008181526004602052604090819020805460ff19169055517f379edf7304a765a58c7eba1fef9bc8675355bf31e276de44d60da39bb04c76ba906110569086906119f5565b60405180910390a250505050565b6001600160401b03811660009081526003602052604081205460ff16908160028111156110935761109361169e565b036110b1576040516307ae018160e21b815260040160405180910390fd5b60028160028111156110c5576110c561169e565b036107625760405163ae6a3b7760e01b815260040160405180910390fd5b828054828255906000526020600020908101928215611138579160200282015b8281111561113857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611103565b50611144929150611162565b5090565b50805460008255906000526020600020908101906103d491905b5b808211156111445760008155600101611163565b60006020828403121561118957600080fd5b81356001600160e01b0319811681146111a157600080fd5b9392505050565b6000815180845260005b818110156111ce576020818501810151868301820152016111b2565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006111a160208301846111a8565b80356001600160a01b038116811461121857600080fd5b919050565b60006020828403121561122f57600080fd5b6111a182611201565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171561127057611270611238565b60405290565b604051608081016001600160401b038111828210171561127057611270611238565b604051601f8201601f191681016001600160401b03811182821017156112c0576112c0611238565b604052919050565b80356001600160401b038116811461121857600080fd5b60006001600160401b038211156112f8576112f8611238565b5060051b60200190565b600082601f83011261131357600080fd5b81356020611328611323836112df565b611298565b8083825260208201915060208460051b87010193508684111561134a57600080fd5b602086015b8481101561136d5761136081611201565b835291830191830161134f565b509695505050505050565b600082601f83011261138957600080fd5b81356001600160401b038111156113a2576113a2611238565b6113b5601f8201601f1916602001611298565b8181528460208386010111156113ca57600080fd5b816020850160208301376000918101602001919091529392505050565b6000604082840312156113f957600080fd5b61140161124e565b905061140c826112c8565b815260208201356001600160401b038082111561142857600080fd5b908301906080828603121561143c57600080fd5b611444611276565b82356003811061145357600080fd5b8152602083013560ff8116811461146957600080fd5b602082015260408301358281111561148057600080fd5b61148c87828601611302565b6040830152506060830135828111156114a457600080fd5b6114b087828601611378565b606083015250602084015250909392505050565b6000602082840312156114d657600080fd5b81356001600160401b038111156114ec57600080fd5b6114f8848285016113e7565b949350505050565b60006020828403121561151257600080fd5b6111a1826112c8565b6000806040838503121561152e57600080fd5b61153783611201565b91506020830135801515811461154c57600080fd5b809150509250929050565b6000602080838503121561156a57600080fd5b82356001600160401b038082111561158157600080fd5b818501915085601f83011261159557600080fd5b81356115a3611323826112df565b81815260059190911b830184019084810190888311156115c257600080fd5b8585015b838110156115fa578035858111156115de5760008081fd5b6115ec8b89838a01016113e7565b8452509186019186016115c6565b5098975050505050505050565b6000602080838503121561161a57600080fd5b82356001600160401b0381111561163057600080fd5b8301601f8101851361164157600080fd5b803561164f611323826112df565b81815260059190911b8201830190838101908783111561166e57600080fd5b928401925b8284101561169357611684846112c8565b82529284019290840190611673565b979650505050505050565b634e487b7160e01b600052602160045260246000fd5b60008151808452602080850194506020840160005b838110156116ee5781516001600160a01b0316875295820195908201906001016116c9565b509495945050505050565b600081516003811061171b57634e487b7160e01b600052602160045260246000fd5b8084525060ff602083015116602084015260408201516080604085015261174560808501826116b4565b90506060830151848203606086015261175e82826111a8565b95945050505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b828110156117be57603f198886030184526117ac8583516116f9565b94509285019290850190600101611790565b5092979650505050505050565b600080604083850312156117de57600080fd5b6117e7836112c8565b915060208301356001600160401b0381111561180257600080fd5b61180e85828601611302565b9150509250929050565b6020815260006111a160208301846116f9565b6000806040838503121561183e57600080fd5b611847836112c8565b915061185560208401611201565b90509250929050565b600181811c9082168061187257607f821691505b60208210810361189257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b601f821115610e8f576000816000526020600020601f850160051c810160208610156118d75750805b601f850160051c820191505b818110156118f6578281556001016118e3565b505050505050565b81516001600160401b0381111561191757611917611238565b61192b81611925845461185e565b846118ae565b602080601f83116001811461196057600084156119485750858301515b600019600386901b1c1916600185901b1785556118f6565b600085815260208120601f198616915b8281101561198f57888601518255948401946001909101908401611970565b50858210156119ad5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60ff841681526060602082015260006119d960608301856116b4565b82810360408401526119eb81856111a8565b9695505050505050565b6020815260006111a160208301846116b456fea2646970667358221220ca0c6c17cd9e9d698a5b481dafcf866fba1102ff430d59ab00b5d9df050684b264736f6c63430008170033",
    "sourceMap": "227:171:48:-:0;;;276:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;374:11;387:5;374:11;387:5;1864:32:6;735:10:4;1864:18:6;:32::i;:::-;1067:28:9;1083:11;1067:15;:28::i;:::-;1105:15;1114:5;1105:8;:15::i;:::-;997:130;;783:116:26;;276:120:48;;227:171;;3211:187:6;3284:16;3303:6;;-1:-1:-1;;;;;3319:17:6;;;-1:-1:-1;;;;;;3319:17:6;;;;;;3351:40;;3303:6;;;;;;;3351:40;;3284:16;3351:40;3274:124;3211:187;:::o;2765:104:9:-;2836:12;:26;2851:11;2836:12;:26;:::i;:::-;;2765:104;:::o;3008:78::-;3066:5;:13;3074:5;3066;:13;:::i;14:127:49:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:844;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:49;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:49;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;732:3;725:4;720:2;712:6;708:15;704:26;701:35;698:55;;;749:1;746;739:12;698:55;771:1;762:10;;781:133;795:2;792:1;789:9;781:133;;;883:14;;;879:23;;873:30;852:14;;;848:23;;841:63;806:10;;;;781:133;;;958:1;951:4;946:2;938:6;934:15;930:26;923:37;978:6;969:15;;;;;;146:844;;;;:::o;995:562::-;1094:6;1102;1155:2;1143:9;1134:7;1130:23;1126:32;1123:52;;;1171:1;1168;1161:12;1123:52;1198:16;;-1:-1:-1;;;;;1263:14:49;;;1260:34;;;1290:1;1287;1280:12;1260:34;1313:61;1366:7;1357:6;1346:9;1342:22;1313:61;:::i;:::-;1303:71;;1420:2;1409:9;1405:18;1399:25;1383:41;;1449:2;1439:8;1436:16;1433:36;;;1465:1;1462;1455:12;1433:36;;1488:63;1543:7;1532:8;1521:9;1517:24;1488:63;:::i;:::-;1478:73;;;995:562;;;;;:::o;1562:380::-;1641:1;1637:12;;;;1684;;;1705:61;;1759:4;1751:6;1747:17;1737:27;;1705:61;1812:2;1804:6;1801:14;1781:18;1778:38;1775:161;;1858:10;1853:3;1849:20;1846:1;1839:31;1893:4;1890:1;1883:15;1921:4;1918:1;1911:15;1775:161;;1562:380;;;:::o;2073:543::-;2175:2;2170:3;2167:11;2164:446;;;2211:1;2235:5;2232:1;2225:16;2279:4;2276:1;2266:18;2349:2;2337:10;2333:19;2330:1;2326:27;2320:4;2316:38;2385:4;2373:10;2370:20;2367:47;;;-1:-1:-1;2408:4:49;2367:47;2463:2;2458:3;2454:12;2451:1;2447:20;2441:4;2437:31;2427:41;;2518:82;2536:2;2529:5;2526:13;2518:82;;;2581:17;;;2562:1;2551:13;2518:82;;;2522:3;;;2164:446;2073:543;;;:::o;2792:1345::-;2912:10;;-1:-1:-1;;;;;2934:30:49;;2931:56;;;2967:18;;:::i;:::-;2996:97;3086:6;3046:38;3078:4;3072:11;3046:38;:::i;:::-;3040:4;2996:97;:::i;:::-;3148:4;;3205:2;3194:14;;3222:1;3217:663;;;;3924:1;3941:6;3938:89;;;-1:-1:-1;3993:19:49;;;3987:26;3938:89;-1:-1:-1;;2749:1:49;2745:11;;;2741:24;2737:29;2727:40;2773:1;2769:11;;;2724:57;4040:81;;3187:944;;3217:663;2020:1;2013:14;;;2057:4;2044:18;;-1:-1:-1;;3253:20:49;;;3371:236;3385:7;3382:1;3379:14;3371:236;;;3474:19;;;3468:26;3453:42;;3566:27;;;;3534:1;3522:14;;;;3401:19;;3371:236;;;3375:3;3635:6;3626:7;3623:19;3620:201;;;3696:19;;;3690:26;-1:-1:-1;;3779:1:49;3775:14;;;3791:3;3771:24;3767:37;3763:42;3748:58;3733:74;;3620:201;-1:-1:-1;;;;;3867:1:49;3851:14;;;3847:22;3834:36;;-1:-1:-1;2792:1345:49:o;:::-;227:171:48;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c8063867cc5c4116100ad578063d297ac4311610071578063d297ac431461026d578063dc477d2f1461028d578063dcb79d56146102b9578063f005548c146102cc578063f2fde38b146102df57600080fd5b8063867cc5c41461020457806386a92af7146102175780638da5cb5b1461021f5780639806c6ec1461023a578063b9cd29591461025a57600080fd5b80637084819a116100f45780637084819a146101c3578063715018a6146101d657806379e8ca9e146101de5780637aba6f37146101f15780637e5852d9146101f957600080fd5b806301ffc9a71461013157806315dae03e146101595780631d0d35f51461016e57806327a964841461019b5780636c508e66146101b0575b600080fd5b61014461013f366004611177565b6102f2565b60405190151581526020015b60405180910390f35b610161610329565b60405161015091906111ee565b61014461017c36600461121d565b6001600160a01b03166000908152600160208190526040909120541490565b6101ae6101a93660046114c4565b6103bb565b005b6101ae6101be366004611500565b6103d7565b6101ae6101d1366004611500565b6103e8565b6101ae6103f9565b6101ae6101ec36600461151b565b61040d565b6101ae6104ca565b600254600114610144565b6101ae610212366004611557565b610502565b61016161051b565b6000546040516001600160a01b039091168152602001610150565b61024d610248366004611607565b61052a565b6040516101509190611767565b6101ae6102683660046117cb565b610750565b61028061027b366004611500565b610766565b6040516101509190611818565b61014461029b366004611500565b6001600160401b031660009081526004602052604090205460ff1690565b6101446102c736600461182b565b6108e6565b6101ae6102da3660046117cb565b610a10565b6101ae6102ed36600461121d565b610a22565b60006001600160e01b031982166301ffc9a760e01b148061032357506001600160e01b0319821663d912401f60e01b145b92915050565b6060600780546103389061185e565b80601f01602080910402602001604051908101604052809291908181526020018280546103649061185e565b80156103b15780601f10610386576101008083540402835291602001916103b1565b820191906000526020600020905b81548152906001019060200180831161039457829003601f168201915b5050505050905090565b6103c3610a5a565b6103cb610a99565b6103d481610abc565b50565b6103df610a5a565b6103d481610cfb565b6103f0610a5a565b6103d481610d52565b610401610ddd565b61040b6000610e08565b565b610415610ddd565b6001600160a01b03821661043c5760405163016b812760e71b815260040160405180910390fd5b80610461576001600160a01b0382166000908152600160205260408120819055610480565b6001600160a01b03821660009081526001602081905260409091208190555b50816001600160a01b03167f4b5657e84cf8a17ac5587bbeb3cc2bab9826c4c67b8bad81b4849de49d37aac2826040516104be911515815260200190565b60405180910390a25050565b6104d2610ddd565b60016002556040517f3e423347941b5c6e8c727e4071ffeb6869244ce75121d6a56ba8356086851c6c90600090a1565b61050a610a5a565b610512610a99565b6103d481610e58565b6060600680546103389061185e565b8051606090806001600160401b0381111561054757610547611238565b6040519080825280602002602001820160405280156105a257816020015b61058f60408051608081019091528060008152600060208201526060604082018190529081015290565b8152602001906001900390816105655790505b50915060005b818110156107495760008482815181106105c4576105c4611898565b6020908102919091018101516001600160401b03811660009081526003909252604091829020825160808101909352805491935090829060ff16600281111561060f5761060f61169e565b60028111156106205761062061169e565b81528154610100900460ff16602080830191909152600183018054604080518285028101850182528281529401939283018282801561068857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161066a575b505050505081526020016002820180546106a19061185e565b80601f01602080910402602001604051908101604052809291908181526020018280546106cd9061185e565b801561071a5780601f106106ef5761010080835404028352916020019161071a565b820191906000526020600020905b8154815290600101906020018083116106fd57829003601f168201915b50505050508152505084838151811061073557610735611898565b6020908102919091010152506001016105a8565b5050919050565b610758610a5a565b6107628282610e94565b5050565b61079060408051608081019091528060008152600060208201526060604082018190529081015290565b6001600160401b038216600090815260036020526040908190208151608081019092528054829060ff1660028111156107cb576107cb61169e565b60028111156107dc576107dc61169e565b81528154610100900460ff16602080830191909152600183018054604080518285028101850182528281529401939283018282801561084457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610826575b5050505050815260200160028201805461085d9061185e565b80601f01602080910402602001604051908101604052809291908181526020018280546108899061185e565b80156108d65780601f106108ab576101008083540402835291602001916108d6565b820191906000526020600020905b8154815290600101906020018083116108b957829003601f168201915b5050505050815250509050919050565b6001600160401b03821660009081526004602052604090205460ff168015801561093c575060016001600160401b03841660009081526003602052604090205460ff16600281111561093a5761093a61169e565b145b15610323576001600160401b0383166000908152600360209081526040808320600101805482518185028101850190935280835291929091908301828280156109ae57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610990575b505083519394506000925050505b81811015610a07578281815181106109d6576109d6611898565b60200260200101516001600160a01b0316856001600160a01b0316036109ff5760019350610a07565b6001016109bc565b50505092915050565b610a18610a5a565b6107628282610f4d565b610a2a610ddd565b6001600160a01b038116610a5157604051634ece6ecf60e01b815260040160405180910390fd5b6103d481610e08565b6000546001600160a01b03163314801590610a7b5750610a793361017c565b155b1561040b576040516301eca16760e41b815260040160405180910390fd5b60025460010361040b5760405163ed1fa96f60e01b815260040160405180910390fd5b805160208201516001600160401b038216610aea576040516312c33ce360e01b815260040160405180910390fd5b6001600160401b03821660009081526003602052604081205460ff166002811115610b1757610b1761169e565b14610b3557604051630fbdf8dd60e01b815260040160405180910390fd5b600081516002811115610b4a57610b4a61169e565b03610b6857604051630b65407360e01b815260040160405180910390fd5b600281516002811115610b7d57610b7d61169e565b148015610b8e575060408101515115155b15610bac57604051630b65407360e01b815260040160405180910390fd5b6001600160401b03821660009081526003602052604090208151815483929190829060ff19166001836002811115610be657610be661169e565b0217905550602082810151825460ff9091166101000261ff001990911617825560408301518051610c1d92600185019201906110e3565b5060608201516002820190610c3290826118fe565b5050600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db06004820401805460039092166008026101000a6001600160401b0381810219909316928616029190911790555080516002811115610ca557610ca561169e565b826001600160401b03167fc4715b52aed3b9dfb2fbdc63e39e234892ec1dd3811d2c671646dbfd3d32d92e836020015184604001518560600151604051610cee939291906119bd565b60405180910390a3505050565b80610d0581611064565b6001600160401b038216600081815260046020526040808220805460ff19166001179055517f540b0b22993accb6c2b7b0f4a5bd1b7e6419708ef2a68c39f09f01c848ba4fbc9190a25050565b80610d5c81611064565b6001600160401b0382166000908152600360205260408120610d8391600190910190611148565b6001600160401b0382166000818152600460209081526040808320805460ff191690558051928352908201908190527f507a75726ac34d3eb68ebf61f034616ee2030c6193bd4a9efb7e131de6c6adcc916104be916119f5565b6000546001600160a01b0316331461040b57604051631c62d58f60e11b815260040160405180910390fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805160005b81811015610e8f57610e87838281518110610e7a57610e7a611898565b6020026020010151610abc565b600101610e5d565b505050565b81610e9e81611064565b6000825111610ec057604051631763fd3d60e21b815260040160405180910390fd5b6001600160401b03831660009081526003602090815260409091208351610eef926001909201918501906110e3565b506001600160401b03831660008181526004602052604090819020805460ff19169055517f507a75726ac34d3eb68ebf61f034616ee2030c6193bd4a9efb7e131de6c6adcc90610f409085906119f5565b60405180910390a2505050565b81610f5781611064565b6000825111610f7957604051631763fd3d60e21b815260040160405180910390fd5b815160005b818110156110055760036000866001600160401b03166001600160401b03168152602001908152602001600020600101848281518110610fc057610fc0611898565b60209081029190910181015182546001808201855560009485529290932090920180546001600160a01b0319166001600160a01b039093169290921790915501610f7e565b506001600160401b03841660008181526004602052604090819020805460ff19169055517f379edf7304a765a58c7eba1fef9bc8675355bf31e276de44d60da39bb04c76ba906110569086906119f5565b60405180910390a250505050565b6001600160401b03811660009081526003602052604081205460ff16908160028111156110935761109361169e565b036110b1576040516307ae018160e21b815260040160405180910390fd5b60028160028111156110c5576110c561169e565b036107625760405163ae6a3b7760e01b815260040160405180910390fd5b828054828255906000526020600020908101928215611138579160200282015b8281111561113857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611103565b50611144929150611162565b5090565b50805460008255906000526020600020908101906103d491905b5b808211156111445760008155600101611163565b60006020828403121561118957600080fd5b81356001600160e01b0319811681146111a157600080fd5b9392505050565b6000815180845260005b818110156111ce576020818501810151868301820152016111b2565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006111a160208301846111a8565b80356001600160a01b038116811461121857600080fd5b919050565b60006020828403121561122f57600080fd5b6111a182611201565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171561127057611270611238565b60405290565b604051608081016001600160401b038111828210171561127057611270611238565b604051601f8201601f191681016001600160401b03811182821017156112c0576112c0611238565b604052919050565b80356001600160401b038116811461121857600080fd5b60006001600160401b038211156112f8576112f8611238565b5060051b60200190565b600082601f83011261131357600080fd5b81356020611328611323836112df565b611298565b8083825260208201915060208460051b87010193508684111561134a57600080fd5b602086015b8481101561136d5761136081611201565b835291830191830161134f565b509695505050505050565b600082601f83011261138957600080fd5b81356001600160401b038111156113a2576113a2611238565b6113b5601f8201601f1916602001611298565b8181528460208386010111156113ca57600080fd5b816020850160208301376000918101602001919091529392505050565b6000604082840312156113f957600080fd5b61140161124e565b905061140c826112c8565b815260208201356001600160401b038082111561142857600080fd5b908301906080828603121561143c57600080fd5b611444611276565b82356003811061145357600080fd5b8152602083013560ff8116811461146957600080fd5b602082015260408301358281111561148057600080fd5b61148c87828601611302565b6040830152506060830135828111156114a457600080fd5b6114b087828601611378565b606083015250602084015250909392505050565b6000602082840312156114d657600080fd5b81356001600160401b038111156114ec57600080fd5b6114f8848285016113e7565b949350505050565b60006020828403121561151257600080fd5b6111a1826112c8565b6000806040838503121561152e57600080fd5b61153783611201565b91506020830135801515811461154c57600080fd5b809150509250929050565b6000602080838503121561156a57600080fd5b82356001600160401b038082111561158157600080fd5b818501915085601f83011261159557600080fd5b81356115a3611323826112df565b81815260059190911b830184019084810190888311156115c257600080fd5b8585015b838110156115fa578035858111156115de5760008081fd5b6115ec8b89838a01016113e7565b8452509186019186016115c6565b5098975050505050505050565b6000602080838503121561161a57600080fd5b82356001600160401b0381111561163057600080fd5b8301601f8101851361164157600080fd5b803561164f611323826112df565b81815260059190911b8201830190838101908783111561166e57600080fd5b928401925b8284101561169357611684846112c8565b82529284019290840190611673565b979650505050505050565b634e487b7160e01b600052602160045260246000fd5b60008151808452602080850194506020840160005b838110156116ee5781516001600160a01b0316875295820195908201906001016116c9565b509495945050505050565b600081516003811061171b57634e487b7160e01b600052602160045260246000fd5b8084525060ff602083015116602084015260408201516080604085015261174560808501826116b4565b90506060830151848203606086015261175e82826111a8565b95945050505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b828110156117be57603f198886030184526117ac8583516116f9565b94509285019290850190600101611790565b5092979650505050505050565b600080604083850312156117de57600080fd5b6117e7836112c8565b915060208301356001600160401b0381111561180257600080fd5b61180e85828601611302565b9150509250929050565b6020815260006111a160208301846116f9565b6000806040838503121561183e57600080fd5b611847836112c8565b915061185560208401611201565b90509250929050565b600181811c9082168061187257607f821691505b60208210810361189257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b601f821115610e8f576000816000526020600020601f850160051c810160208610156118d75750805b601f850160051c820191505b818110156118f6578281556001016118e3565b505050505050565b81516001600160401b0381111561191757611917611238565b61192b81611925845461185e565b846118ae565b602080601f83116001811461196057600084156119485750858301515b600019600386901b1c1916600185901b1785556118f6565b600085815260208120601f198616915b8281101561198f57888601518255948401946001909101908401611970565b50858210156119ad5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60ff841681526060602082015260006119d960608301856116b4565b82810360408401526119eb81856111a8565b9695505050505050565b6020815260006111a160208301846116b456fea2646970667358221220ca0c6c17cd9e9d698a5b481dafcf866fba1102ff430d59ab00b5d9df050684b264736f6c63430008170033",
    "sourceMap": "227:171:48:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2067:233:9;;;;;;:::i;:::-;;:::i;:::-;;;470:14:49;;463:22;445:41;;433:2;418:18;2067:233:9;;;;;;;;2508:86;;;:::i;:::-;;;;;;;:::i;4413:165:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4540:26:6;4492:19;4540:26;;;:13;:26;;;;;;;;;:31;;4413:165;1463:152:26;;;;;;:::i;:::-;;:::i;:::-;;3871:139;;;;;;:::i;:::-;;:::i;4284:151::-;;;;;;:::i;:::-;;:::i;2466:101:6:-;;;:::i;3780:358::-;;;;;;:::i;:::-;;:::i;721:94:7:-;;;:::i;1004:93::-;1080:5;;1089:1;1080:10;1004:93;;2196:164:26;;;;;;:::i;:::-;;:::i;2354:100:9:-;;;:::i;2033:94:6:-;2079:14;2114:6;2033:94;;-1:-1:-1;;;;;2114:6:6;;;7436:51:49;;7424:2;7409:18;2033:94:6;7290:203:49;8694:378:9;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3346:214:26:-;;;;;;:::i;:::-;;:::i;8529:111:9:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7484:159::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7610:26:9;7566:17;7610:26;;;:18;:26;;;;;;;;;7484:159;7697:778;;;;;;:::i;:::-;;:::i;2732:214:26:-;;;;;;:::i;:::-;;:::i;2767:187:6:-;;;;;;:::i;:::-;;:::i;2067:233:9:-;2157:4;-1:-1:-1;;;;;;2192:40:9;;-1:-1:-1;;;2192:40:9;;:101;;-1:-1:-1;;;;;;;2248:45:9;;-1:-1:-1;;;2248:45:9;2192:101;2173:120;2067:233;-1:-1:-1;;2067:233:9:o;2508:86::-;2550:13;2582:5;2575:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2508:86;:::o;1463:152:26:-;1542:25:6;:23;:25::i;:::-;508:16:7::1;:14;:16::i;:::-;1586:22:26::2;1595:12;1586:8;:22::i;:::-;1463:152:::0;:::o;3871:139::-;1542:25:6;:23;:25::i;:::-;3976:27:26::1;3996:6;3976:19;:27::i;4284:151::-:0;1542:25:6;:23;:25::i;:::-;4395:33:26::1;4421:6;4395:25;:33::i;2466:101:6:-:0;1705:12;:10;:12::i;:::-;2530:30:::1;2557:1;2530:18;:30::i;:::-;2466:101::o:0;3780:358::-;1705:12;:10;:12::i;:::-;-1:-1:-1;;;;;3899:25:6;::::1;3895:71;;3933:33;;-1:-1:-1::0;;;3933:33:6::1;;;;;;;;;;;3895:71;3976:9;:99;;-1:-1:-1::0;;;;;4045:26:6;::::1;4074:1;4045:26:::0;;;:13:::1;:26;::::0;;;;:30;;;3976:99:::1;;;-1:-1:-1::0;;;;;4000:26:6;::::1;;::::0;;;4029:1:::1;4000:26;::::0;;;;;;;:30;;;3976:99:::1;;4108:11;-1:-1:-1::0;;;;;4090:41:6::1;;4121:9;4090:41;;;;470:14:49::0;463:22;445:41;;433:2;418:18;;305:187;4090:41:6::1;;;;;;;;3780:358:::0;;:::o;721:94:7:-;1705:12:6;:10;:12::i;:::-;783:1:7::1;775:5;:9:::0;799::::1;::::0;::::1;::::0;;;::::1;721:94::o:0;2196:164:26:-;1542:25:6;:23;:25::i;:::-;508:16:7::1;:14;:16::i;:::-;2326:27:26::2;2339:13;2326:12;:27::i;2354:100:9:-:0;2403:13;2435:12;2428:19;;;;;:::i;8694:378::-;8822:14;;8772:19;;8822:14;-1:-1:-1;;;;;8854:20:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8854:20:9;;;;;;;;;;;;;;;;;8846:28;;8890:9;8885:181;8905:8;8901:1;:12;8885:181;;;8931:13;8947:7;8955:1;8947:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;8982:14:9;;;;;;:6;:14;;;;;;;;8971:25;;;;;;;;;;8947:10;;-1:-1:-1;8982:14:9;8971:25;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8971:25:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;8977:1;8971:8;;;;;;;;:::i;:::-;;;;;;;;;;:25;-1:-1:-1;9038:3:9;;8885:181;;;;8793:279;8694:378;;;:::o;3346:214:26:-;1542:25:6;:23;:25::i;:::-;3501:52:26::1;3525:6;3533:19;3501:23;:52::i;:::-;3346:214:::0;;:::o;8529:111:9:-;8582:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8582:16:9;-1:-1:-1;;;;;8618:14:9;;;;;;:6;:14;;;;;;;8610:23;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8610:23:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8529:111;;;:::o;7697:778::-;-1:-1:-1;;;;;7901:26:9;;7805:17;7901:26;;;:18;:26;;;;;;;;8019:13;;:57;;;;-1:-1:-1;8063:13:9;-1:-1:-1;;;;;8036:14:9;;;;;;:6;:14;;;;;:23;;;:40;;;;;;;;:::i;:::-;;8019:57;8015:454;;;-1:-1:-1;;;;;8122:14:9;;8092:27;8122:14;;;:6;:14;;;;;;;;:25;;8092:55;;;;;;;;;;;;;;;;;;;8122:25;;8092:55;;;8122:25;8092:55;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8092:55:9;;;;;;;;;;;;;;;;-1:-1:-1;;8175:17:9;;8092:55;;-1:-1:-1;8161:11:9;;-1:-1:-1;;;8206:253:9;8226:3;8222:1;:7;8206:253;;;8272:10;8283:1;8272:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8255:30:9;:13;-1:-1:-1;;;;;8255:30:9;;8251:123;;8324:4;8309:19;;8350:5;;8251:123;8423:3;;8206:253;;;;8078:391;;7697:778;;;;:::o;2732:214:26:-;1542:25:6;:23;:25::i;:::-;2887:52:26::1;2911:6;2919:19;2887:23;:52::i;2767:187:6:-:0;1705:12;:10;:12::i;:::-;-1:-1:-1;;;;;2851:22:6;::::1;2847:62;;2882:27;;-1:-1:-1::0;;;2882:27:6::1;;;;;;;;;;;2847:62;2919:28;2938:8;2919:18;:28::i;4777:172::-:0;2079:14;2114:6;-1:-1:-1;;;;;2114:6:6;735:10:4;4839:23:6;;;;:55;;-1:-1:-1;4867:27:6;735:10:4;4881:12:6;656:96:4;4867:27:6;4866:28;4839:55;4835:107;;;4915:27;;-1:-1:-1;;;4915:27:6;;;;;;;;;;;1299:91:7;1352:5;;1361:1;1352:10;1348:35;;1371:12;;-1:-1:-1;;;1371:12:7;;;;;;;;;;;3794:719:9;3879:17;;3925:15;;;;-1:-1:-1;;;;;3955:19:9;;3951:53;;3983:21;;-1:-1:-1;;;3983:21:9;;;;;;;;;;;3951:53;-1:-1:-1;;;;;4018:14:9;;4045:13;4018:14;;;:6;:14;;;;;:23;;;:40;;;;;;;;:::i;:::-;;4014:88;;4079:23;;-1:-1:-1;;;4079:23:9;;;;;;;;;;;4014:88;4133:13;4116;;:30;;;;;;;;:::i;:::-;;4112:58;;4155:15;;-1:-1:-1;;;4155:15:9;;;;;;;;;;;4112:58;4201:14;4184:13;;:31;;;;;;;;:::i;:::-;;:62;;;;-1:-1:-1;4219:15:9;;;;:22;:27;;4184:62;4180:102;;;4267:15;;-1:-1:-1;;;4267:15:9;;;;;;;;;;;4180:102;-1:-1:-1;;;;;4293:14:9;;;;;;:6;:14;;;;;:21;;;;4310:4;;4293:14;:21;:14;;-1:-1:-1;;4293:21:9;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;4293:21:9;;;;;;;;;;;;;-1:-1:-1;;4293:21:9;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4293:21:9;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;4324:8:9;:21;;;;;;;-1:-1:-1;4324:21:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4324:21:9;;;;;;;;;;;;;;;;;-1:-1:-1;4404:13:9;;4361:145;;;;;;;;:::i;:::-;4384:6;-1:-1:-1;;;;;4361:145:9;;4431:4;:6;;;4451:4;:15;;;4480:4;:16;;;4361:145;;;;;;;;:::i;:::-;;;;;;;;3853:660;;3794:719;:::o;7269:161::-;7331:6;1517:17;1527:6;1517:9;:17::i;:::-;-1:-1:-1;;;;;7349:26:9;::::1;;::::0;;;:18:::1;:26;::::0;;;;;:33;;-1:-1:-1;;7349:33:9::1;7378:4;7349:33;::::0;;7397:26;::::1;::::0;7349;7397::::1;7269:161:::0;;:::o;6670:238::-;6752:6;1517:17;1527:6;1517:9;:17::i;:::-;-1:-1:-1;;;;;6777:14:9;::::1;;::::0;;;:6:::1;:14;::::0;;;;6770:32:::1;::::0;6777:25:::1;::::0;;::::1;::::0;6770:32:::1;:::i;:::-;-1:-1:-1::0;;;;;6819:26:9;::::1;;::::0;;;:18:::1;:26;::::0;;;;;;;6812:33;;-1:-1:-1;;6812:33:9::1;::::0;;6884:16;;;;;;;::::1;::::0;;;;6861:40:::1;::::0;::::1;::::0;::::1;:::i;5107:102:6:-:0;2079:14;2114:6;-1:-1:-1;;;;;2114:6:6;735:10:4;5156:23:6;5152:50;;5188:14;;-1:-1:-1;;;5188:14:6;;;;;;;;;;;3211:187;3284:16;3303:6;;-1:-1:-1;;;;;3319:17:6;;;-1:-1:-1;;;;;;3319:17:6;;;;;;3351:40;;3303:6;;;;;;;3351:40;;3284:16;3351:40;3274:124;3211:187;:::o;3341:256:9:-;3430:17;;3416:11;3457:134;3477:3;3473:1;:7;3457:134;;;3498:23;3507:10;3518:1;3507:13;;;;;;;;:::i;:::-;;;;;;;3498:8;:23::i;:::-;3563:3;;3457:134;;;;3406:191;3341:256;:::o;5954:379::-;6080:6;1517:17;1527:6;1517:9;:17::i;:::-;6132:1:::1;6102:19;:26;:31;6098:69;;6142:25;;-1:-1:-1::0;;;6142:25:9::1;;;;;;;;;;;6098:69;-1:-1:-1::0;;;;;6177:14:9;::::1;;::::0;;;:6:::1;:14;::::0;;;;;;;:47;;::::1;::::0;:25:::1;::::0;;::::1;::::0;:47;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;;6241:26:9;::::1;;::::0;;;:18:::1;:26;::::0;;;;;;6234:33;;-1:-1:-1;;6234:33:9::1;::::0;;6283:43;::::1;::::0;::::1;::::0;6306:19;;6283:43:::1;:::i;:::-;;;;;;;;5954:379:::0;;;:::o;4951:549::-;5077:6;1517:17;1527:6;1517:9;:17::i;:::-;5129:1:::1;5099:19;:26;:31;5095:69;;5139:25;;-1:-1:-1::0;;;5139:25:9::1;;;;;;;;;;;5095:69;5189:26:::0;;5175:11:::1;5225:165;5245:3;5241:1;:7;5225:165;;;5266:6;:14;5273:6;-1:-1:-1::0;;;;;5266:14:9::1;-1:-1:-1::0;;;;;5266:14:9::1;;;;;;;;;;;;:25;;5297:19;5317:1;5297:22;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;5266:54;;::::1;::::0;;::::1;::::0;;-1:-1:-1;5266:54:9;;;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;5266:54:9::1;-1:-1:-1::0;;;;;5266:54:9;;::::1;::::0;;;::::1;::::0;;;5362:3:::1;5225:165;;;-1:-1:-1::0;;;;;;5406:26:9;::::1;;::::0;;;:18:::1;:26;::::0;;;;;;5399:33;;-1:-1:-1;;5399:33:9::1;::::0;;5448:45;::::1;::::0;::::1;::::0;5473:19;;5448:45:::1;:::i;:::-;;;;;;;;5085:415;4951:549:::0;;;:::o;1773:245::-;-1:-1:-1;;;;;1850:14:9;;1830:17;1850:14;;;:6;:14;;;;;:23;;;;1887:8;:25;;;;;;;;:::i;:::-;;1883:60;;1921:22;;-1:-1:-1;;;1921:22:9;;;;;;;;;;;1883:60;1969:14;1957:8;:26;;;;;;;;:::i;:::-;;1953:58;;1992:19;;-1:-1:-1;;;1992:19:9;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:286:49;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:49;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:49:o;497:423::-;539:3;577:5;571:12;604:6;599:3;592:19;629:1;639:162;653:6;650:1;647:13;639:162;;;715:4;771:13;;;767:22;;761:29;743:11;;;739:20;;732:59;668:12;639:162;;;643:3;846:1;839:4;830:6;825:3;821:16;817:27;810:38;909:4;902:2;898:7;893:2;885:6;881:15;877:29;872:3;868:39;864:50;857:57;;;497:423;;;;:::o;925:220::-;1074:2;1063:9;1056:21;1037:4;1094:45;1135:2;1124:9;1120:18;1112:6;1094:45;:::i;1150:173::-;1218:20;;-1:-1:-1;;;;;1267:31:49;;1257:42;;1247:70;;1313:1;1310;1303:12;1247:70;1150:173;;;:::o;1328:186::-;1387:6;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;1519:127::-;1580:10;1575:3;1571:20;1568:1;1561:31;1611:4;1608:1;1601:15;1635:4;1632:1;1625:15;1651:257;1723:4;1717:11;;;1755:17;;-1:-1:-1;;;;;1787:34:49;;1823:22;;;1784:62;1781:88;;;1849:18;;:::i;:::-;1885:4;1878:24;1651:257;:::o;1913:253::-;1985:2;1979:9;2027:4;2015:17;;-1:-1:-1;;;;;2047:34:49;;2083:22;;;2044:62;2041:88;;;2109:18;;:::i;2171:275::-;2242:2;2236:9;2307:2;2288:13;;-1:-1:-1;;2284:27:49;2272:40;;-1:-1:-1;;;;;2327:34:49;;2363:22;;;2324:62;2321:88;;;2389:18;;:::i;:::-;2425:2;2418:22;2171:275;;-1:-1:-1;2171:275:49:o;2451:171::-;2518:20;;-1:-1:-1;;;;;2567:30:49;;2557:41;;2547:69;;2612:1;2609;2602:12;2627:183;2687:4;-1:-1:-1;;;;;2712:6:49;2709:30;2706:56;;;2742:18;;:::i;:::-;-1:-1:-1;2787:1:49;2783:14;2799:4;2779:25;;2627:183::o;2815:674::-;2869:5;2922:3;2915:4;2907:6;2903:17;2899:27;2889:55;;2940:1;2937;2930:12;2889:55;2976:6;2963:20;3002:4;3026:60;3042:43;3082:2;3042:43;:::i;:::-;3026:60;:::i;:::-;3108:3;3132:2;3127:3;3120:15;3160:4;3155:3;3151:14;3144:21;;3217:4;3211:2;3208:1;3204:10;3196:6;3192:23;3188:34;3174:48;;3245:3;3237:6;3234:15;3231:35;;;3262:1;3259;3252:12;3231:35;3298:4;3290:6;3286:17;3312:148;3328:6;3323:3;3320:15;3312:148;;;3394:23;3413:3;3394:23;:::i;:::-;3382:36;;3438:12;;;;3345;;3312:148;;;-1:-1:-1;3478:5:49;2815:674;-1:-1:-1;;;;;;2815:674:49:o;3494:531::-;3537:5;3590:3;3583:4;3575:6;3571:17;3567:27;3557:55;;3608:1;3605;3598:12;3557:55;3644:6;3631:20;-1:-1:-1;;;;;3666:2:49;3663:26;3660:52;;;3692:18;;:::i;:::-;3736:55;3779:2;3760:13;;-1:-1:-1;;3756:27:49;3785:4;3752:38;3736:55;:::i;:::-;3816:2;3807:7;3800:19;3862:3;3855:4;3850:2;3842:6;3838:15;3834:26;3831:35;3828:55;;;3879:1;3876;3869:12;3828:55;3944:2;3937:4;3929:6;3925:17;3918:4;3909:7;3905:18;3892:55;3992:1;3967:16;;;3985:4;3963:27;3956:38;;;;3971:7;3494:531;-1:-1:-1;;;3494:531:49:o;4030:1181::-;4089:5;4137:4;4125:9;4120:3;4116:19;4112:30;4109:50;;;4155:1;4152;4145:12;4109:50;4177:22;;:::i;:::-;4168:31;;4222:28;4240:9;4222:28;:::i;:::-;4215:5;4208:43;4302:2;4291:9;4287:18;4274:32;-1:-1:-1;;;;;4366:2:49;4358:6;4355:14;4352:34;;;4382:1;4379;4372:12;4352:34;4405:22;;;;4457:4;4443:12;;;4439:23;4436:43;;;4475:1;4472;4465:12;4436:43;4503:22;;:::i;:::-;4562:2;4549:16;4596:1;4587:7;4584:14;4574:42;;4612:1;4609;4602:12;4574:42;4625:24;;4694:2;4686:11;;4673:25;4742:4;4729:18;;4717:31;;4707:59;;4762:1;4759;4752:12;4707:59;4795:2;4782:16;;4775:33;4854:4;4846:13;;4833:27;4872:16;;;4869:36;;;4901:1;4898;4891:12;4869:36;4941:52;4989:3;4978:8;4974:2;4970:17;4941:52;:::i;:::-;4934:4;4925:7;4921:18;4914:80;;5040:2;5036;5032:11;5019:25;5069:2;5059:8;5056:16;5053:36;;;5085:1;5082;5075:12;5053:36;5123:41;5160:3;5149:8;5145:2;5141:17;5123:41;:::i;:::-;5118:2;5105:16;;5098:67;-1:-1:-1;5192:2:49;5181:14;;5174:31;-1:-1:-1;5185:5:49;;4030:1181;-1:-1:-1;;;4030:1181:49:o;5216:356::-;5306:6;5359:2;5347:9;5338:7;5334:23;5330:32;5327:52;;;5375:1;5372;5365:12;5327:52;5415:9;5402:23;-1:-1:-1;;;;;5440:6:49;5437:30;5434:50;;;5480:1;5477;5470:12;5434:50;5503:63;5558:7;5549:6;5538:9;5534:22;5503:63;:::i;:::-;5493:73;5216:356;-1:-1:-1;;;;5216:356:49:o;5577:184::-;5635:6;5688:2;5676:9;5667:7;5663:23;5659:32;5656:52;;;5704:1;5701;5694:12;5656:52;5727:28;5745:9;5727:28;:::i;5766:347::-;5831:6;5839;5892:2;5880:9;5871:7;5867:23;5863:32;5860:52;;;5908:1;5905;5898:12;5860:52;5931:29;5950:9;5931:29;:::i;:::-;5921:39;;6010:2;5999:9;5995:18;5982:32;6057:5;6050:13;6043:21;6036:5;6033:32;6023:60;;6079:1;6076;6069:12;6023:60;6102:5;6092:15;;;5766:347;;;;;:::o;6118:1167::-;6233:6;6264:2;6307;6295:9;6286:7;6282:23;6278:32;6275:52;;;6323:1;6320;6313:12;6275:52;6363:9;6350:23;-1:-1:-1;;;;;6433:2:49;6425:6;6422:14;6419:34;;;6449:1;6446;6439:12;6419:34;6487:6;6476:9;6472:22;6462:32;;6532:7;6525:4;6521:2;6517:13;6513:27;6503:55;;6554:1;6551;6544:12;6503:55;6590:2;6577:16;6613:60;6629:43;6669:2;6629:43;:::i;6613:60::-;6707:15;;;6789:1;6785:10;;;;6777:19;;6773:28;;;6738:12;;;;6813:19;;;6810:39;;;6845:1;6842;6835:12;6810:39;6877:2;6873;6869:11;6889:366;6905:6;6900:3;6897:15;6889:366;;;6991:3;6978:17;7027:2;7014:11;7011:19;7008:109;;;7071:1;7100:2;7096;7089:14;7008:109;7142:70;7204:7;7199:2;7185:11;7181:2;7177:20;7173:29;7142:70;:::i;:::-;7130:83;;-1:-1:-1;7233:12:49;;;;6922;;6889:366;;;-1:-1:-1;7274:5:49;6118:1167;-1:-1:-1;;;;;;;;6118:1167:49:o;7498:895::-;7581:6;7612:2;7655;7643:9;7634:7;7630:23;7626:32;7623:52;;;7671:1;7668;7661:12;7623:52;7711:9;7698:23;-1:-1:-1;;;;;7736:6:49;7733:30;7730:50;;;7776:1;7773;7766:12;7730:50;7799:22;;7852:4;7844:13;;7840:27;-1:-1:-1;7830:55:49;;7881:1;7878;7871:12;7830:55;7917:2;7904:16;7940:60;7956:43;7996:2;7956:43;:::i;7940:60::-;8034:15;;;8116:1;8112:10;;;;8104:19;;8100:28;;;8065:12;;;;8140:19;;;8137:39;;;8172:1;8169;8162:12;8137:39;8196:11;;;;8216:147;8232:6;8227:3;8224:15;8216:147;;;8298:22;8316:3;8298:22;:::i;:::-;8286:35;;8249:12;;;;8341;;;;8216:147;;;8382:5;7498:895;-1:-1:-1;;;;;;;7498:895:49:o;8398:127::-;8459:10;8454:3;8450:20;8447:1;8440:31;8490:4;8487:1;8480:15;8514:4;8511:1;8504:15;8530:465;8583:3;8621:5;8615:12;8648:6;8643:3;8636:19;8674:4;8703;8698:3;8694:14;8687:21;;8742:4;8735:5;8731:16;8765:1;8775:195;8789:6;8786:1;8783:13;8775:195;;;8854:13;;-1:-1:-1;;;;;8850:39:49;8838:52;;8910:12;;;;8945:15;;;;8886:1;8804:9;8775:195;;;-1:-1:-1;8986:3:49;;8530:465;-1:-1:-1;;;;;8530:465:49:o;9000:657::-;9047:3;9081:5;9075:12;9113:1;9109:2;9106:9;9096:140;;9158:10;9153:3;9149:20;9146:1;9139:31;9193:4;9190:1;9183:15;9221:4;9218:1;9211:15;9096:140;9257:2;9252:3;9245:15;;9321:4;9313;9306:5;9302:16;9296:23;9292:34;9285:4;9280:3;9276:14;9269:58;9373:4;9366:5;9362:16;9356:23;9411:4;9404;9399:3;9395:14;9388:28;9437:58;9489:4;9484:3;9480:14;9466:12;9437:58;:::i;:::-;9425:70;;9543:4;9536:5;9532:16;9526:23;9591:3;9585:4;9581:14;9574:4;9569:3;9565:14;9558:38;9612:39;9646:4;9630:14;9612:39;:::i;:::-;9605:46;9000:657;-1:-1:-1;;;;;9000:657:49:o;9662:834::-;9850:4;9879:2;9919;9908:9;9904:18;9949:2;9938:9;9931:21;9972:6;10007;10001:13;10038:6;10030;10023:22;10076:2;10065:9;10061:18;10054:25;;10138:2;10128:6;10125:1;10121:14;10110:9;10106:30;10102:39;10088:53;;10176:2;10168:6;10164:15;10197:1;10207:260;10221:6;10218:1;10215:13;10207:260;;;10314:2;10310:7;10298:9;10290:6;10286:22;10282:36;10277:3;10270:49;10342:45;10380:6;10371;10365:13;10342:45;:::i;:::-;10332:55;-1:-1:-1;10445:12:49;;;;10410:15;;;;10243:1;10236:9;10207:260;;;-1:-1:-1;10484:6:49;;9662:834;-1:-1:-1;;;;;;;9662:834:49:o;10501:420::-;10593:6;10601;10654:2;10642:9;10633:7;10629:23;10625:32;10622:52;;;10670:1;10667;10660:12;10622:52;10693:28;10711:9;10693:28;:::i;:::-;10683:38;;10772:2;10761:9;10757:18;10744:32;-1:-1:-1;;;;;10791:6:49;10788:30;10785:50;;;10831:1;10828;10821:12;10785:50;10854:61;10907:7;10898:6;10887:9;10883:22;10854:61;:::i;:::-;10844:71;;;10501:420;;;;;:::o;10926:251::-;11101:2;11090:9;11083:21;11064:4;11121:50;11167:2;11156:9;11152:18;11144:6;11121:50;:::i;11182:258::-;11249:6;11257;11310:2;11298:9;11289:7;11285:23;11281:32;11278:52;;;11326:1;11323;11316:12;11278:52;11349:28;11367:9;11349:28;:::i;:::-;11339:38;;11396;11430:2;11419:9;11415:18;11396:38;:::i;:::-;11386:48;;11182:258;;;;;:::o;11445:380::-;11524:1;11520:12;;;;11567;;;11588:61;;11642:4;11634:6;11630:17;11620:27;;11588:61;11695:2;11687:6;11684:14;11664:18;11661:38;11658:161;;11741:10;11736:3;11732:20;11729:1;11722:31;11776:4;11773:1;11766:15;11804:4;11801:1;11794:15;11658:161;;11445:380;;;:::o;11830:127::-;11891:10;11886:3;11882:20;11879:1;11872:31;11922:4;11919:1;11912:15;11946:4;11943:1;11936:15;12088:543;12190:2;12185:3;12182:11;12179:446;;;12226:1;12250:5;12247:1;12240:16;12294:4;12291:1;12281:18;12364:2;12352:10;12348:19;12345:1;12341:27;12335:4;12331:38;12400:4;12388:10;12385:20;12382:47;;;-1:-1:-1;12423:4:49;12382:47;12478:2;12473:3;12469:12;12466:1;12462:20;12456:4;12452:31;12442:41;;12533:82;12551:2;12544:5;12541:13;12533:82;;;12596:17;;;12577:1;12566:13;12533:82;;;12537:3;;;12088:543;;;:::o;12807:1345::-;12933:3;12927:10;-1:-1:-1;;;;;12952:6:49;12949:30;12946:56;;;12982:18;;:::i;:::-;13011:97;13101:6;13061:38;13093:4;13087:11;13061:38;:::i;:::-;13055:4;13011:97;:::i;:::-;13163:4;;13220:2;13209:14;;13237:1;13232:663;;;;13939:1;13956:6;13953:89;;;-1:-1:-1;14008:19:49;;;14002:26;13953:89;-1:-1:-1;;12764:1:49;12760:11;;;12756:24;12752:29;12742:40;12788:1;12784:11;;;12739:57;14055:81;;13202:944;;13232:663;12035:1;12028:14;;;12072:4;12059:18;;-1:-1:-1;;13268:20:49;;;13386:236;13400:7;13397:1;13394:14;13386:236;;;13489:19;;;13483:26;13468:42;;13581:27;;;;13549:1;13537:14;;;;13416:19;;13386:236;;;13390:3;13650:6;13641:7;13638:19;13635:201;;;13711:19;;;13705:26;-1:-1:-1;;13794:1:49;13790:14;;;13806:3;13786:24;13782:37;13778:42;13763:58;13748:74;;13635:201;-1:-1:-1;;;;;13882:1:49;13866:14;;;13862:22;13849:36;;-1:-1:-1;12807:1345:49:o;14157:502::-;14420:4;14412:6;14408:17;14397:9;14390:36;14462:2;14457;14446:9;14442:18;14435:30;14371:4;14488:56;14540:2;14529:9;14525:18;14517:6;14488:56;:::i;:::-;14592:9;14584:6;14580:22;14575:2;14564:9;14560:18;14553:50;14620:33;14646:6;14638;14620:33;:::i;:::-;14612:41;14157:502;-1:-1:-1;;;;;;14157:502:49:o;14664:261::-;14843:2;14832:9;14825:21;14806:4;14863:56;14915:2;14904:9;14900:18;14892:6;14863:56;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addEquippableAddresses(uint64,address[])": "f005548c",
    "addPart((uint64,(uint8,uint8,address[],string)))": "27a96484",
    "addPartList((uint64,(uint8,uint8,address[],string))[])": "867cc5c4",
    "checkIsEquippable(uint64,address)": "dcb79d56",
    "checkIsEquippableToAll(uint64)": "dc477d2f",
    "getLock()": "7e5852d9",
    "getMetadataURI()": "86a92af7",
    "getPart(uint64)": "d297ac43",
    "getParts(uint64[])": "9806c6ec",
    "getType()": "15dae03e",
    "isContributor(address)": "1d0d35f5",
    "manageContributor(address,bool)": "79e8ca9e",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "resetEquippableAddresses(uint64)": "7084819a",
    "setEquippableAddresses(uint64,address[])": "b9cd2959",
    "setEquippableToAll(uint64)": "6c508e66",
    "setLock()": "7aba6f37",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"type_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"RMRKBadConfig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKIdZeroForbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNewContributorIsZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNewOwnerIsZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNotOwnerOrContributor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKPartAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKPartDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKPartIsNotSlot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKZeroLengthIdsPassed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"partId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"equippableAddresses\",\"type\":\"address[]\"}],\"name\":\"AddedEquippables\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"partId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"enum IRMRKCatalog.ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"zIndex\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"equippableAddresses\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"AddedPart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isContributor\",\"type\":\"bool\"}],\"name\":\"ContributorUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"LockSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"partId\",\"type\":\"uint64\"}],\"name\":\"SetEquippableToAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"partId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"equippableAddresses\",\"type\":\"address[]\"}],\"name\":\"SetEquippables\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"partId\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"equippableAddresses\",\"type\":\"address[]\"}],\"name\":\"addEquippableAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"partId\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"enum IRMRKCatalog.ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"z\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"equippable\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"internalType\":\"struct IRMRKCatalog.Part\",\"name\":\"part\",\"type\":\"tuple\"}],\"internalType\":\"struct IRMRKCatalog.IntakeStruct\",\"name\":\"intakeStruct\",\"type\":\"tuple\"}],\"name\":\"addPart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"partId\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"enum IRMRKCatalog.ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"z\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"equippable\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"internalType\":\"struct IRMRKCatalog.Part\",\"name\":\"part\",\"type\":\"tuple\"}],\"internalType\":\"struct IRMRKCatalog.IntakeStruct[]\",\"name\":\"intakeStructs\",\"type\":\"tuple[]\"}],\"name\":\"addPartList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"partId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"name\":\"checkIsEquippable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isEquippable\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"partId\",\"type\":\"uint64\"}],\"name\":\"checkIsEquippableToAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isEquippable\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMetadataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"partId\",\"type\":\"uint64\"}],\"name\":\"getPart\",\"outputs\":[{\"components\":[{\"internalType\":\"enum IRMRKCatalog.ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"z\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"equippable\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"internalType\":\"struct IRMRKCatalog.Part\",\"name\":\"part\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64[]\",\"name\":\"partIds\",\"type\":\"uint64[]\"}],\"name\":\"getParts\",\"outputs\":[{\"components\":[{\"internalType\":\"enum IRMRKCatalog.ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"z\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"equippable\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"internalType\":\"struct IRMRKCatalog.Part[]\",\"name\":\"parts\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"}],\"name\":\"isContributor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isContributor_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"grantRole\",\"type\":\"bool\"}],\"name\":\"manageContributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"partId\",\"type\":\"uint64\"}],\"name\":\"resetEquippableAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"partId\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"equippableAddresses\",\"type\":\"address[]\"}],\"name\":\"setEquippableAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"partId\",\"type\":\"uint64\"}],\"name\":\"setEquippableToAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"RMRKIdZeroForbidden()\":[{\"details\":\"The ID 0 in RMRK suite is reserved for empty values. Guarding against its use ensures the expected operation\"}]},\"events\":{\"AddedEquippables(uint64,address[])\":{\"details\":\"It is emitted when new addresses are marked as equippable for `partId`.\",\"params\":{\"equippableAddresses\":\"An array of the new addresses that can equip this part\",\"partId\":\"ID of the part that had new equippable addresses added\"}},\"AddedPart(uint64,uint8,uint8,address[],string)\":{\"details\":\"It is emitted when a new part is added.\",\"params\":{\"equippableAddresses\":\"An array of addresses that can equip this part\",\"itemType\":\"Enum value specifying whether the part is `None`, `Slot` and `Fixed`\",\"metadataURI\":\"The metadata URI of the part\",\"partId\":\"ID of the part that was added\",\"zIndex\":\"An uint specifying the z value of the part. It is used to specify the depth which the part should  be rendered at\"}},\"ContributorUpdate(address,bool)\":{\"details\":\"This can only be triggered by a current owner, so there is no need to include that information in the event.\",\"params\":{\"contributor\":\"Address of the account that had contributor role status updated\",\"isContributor\":\"A boolean value signifying whether the role has been granted (`true`) or revoked (`false`)\"}},\"OwnershipTransferred(address,address)\":{\"params\":{\"newOwner\":\"Address of the account receiving the ownership role\",\"previousOwner\":\"Address of the account that transferred their ownership role\"}},\"SetEquippableToAll(uint64)\":{\"details\":\"It is emitted when a given part is marked as equippable by any.\",\"params\":{\"partId\":\"ID of the part marked as equippable by any address\"}},\"SetEquippables(uint64,address[])\":{\"details\":\"It is emitted when the existing list of addresses marked as equippable for `partId` is overwritten by a new one.\",\"params\":{\"equippableAddresses\":\"The new, full, list of addresses that can equip this part\",\"partId\":\"ID of the part whose list of equippable addresses was overwritten\"}}},\"kind\":\"dev\",\"methods\":{\"addEquippableAddresses(uint64,address[])\":{\"details\":\"Can only be called on `Part`s of `Slot` type.\",\"params\":{\"equippableAddresses\":\"An array of addresses that can be equipped into the `Part` associated with the `partId`\",\"partId\":\"ID of the `Part` that we are adding the equippable addresses to\"}},\"addPart((uint64,(uint8,uint8,address[],string)))\":{\"details\":\"The full `IntakeStruct` looks like this:  [          partID,      [          itemType,          z,          [               permittedCollectionAddress0,               permittedCollectionAddress1,               permittedCollectionAddress2           ],           metadataURI       ]   ]\",\"params\":{\"intakeStruct\":\"`IntakeStruct` struct consisting of `partId` and a nested `Part` struct\"}},\"addPartList((uint64,(uint8,uint8,address[],string))[])\":{\"details\":\"The full `IntakeStruct` looks like this:  [          partID,      [          itemType,          z,          [               permittedCollectionAddress0,               permittedCollectionAddress1,               permittedCollectionAddress2           ],           metadataURI       ]   ]\",\"params\":{\"intakeStructs\":\"[] An array of `IntakeStruct` structs consisting of `partId` and a nested `Part` struct\"}},\"checkIsEquippable(uint64,address)\":{\"details\":\"Returns true if a collection may equip asset with `partId`.\",\"params\":{\"partId\":\"The ID of the part that we are checking\",\"targetAddress\":\"The address that we are checking for whether the part can be equipped into it or not\"},\"returns\":{\"isEquippable\":\"The status indicating whether the `targetAddress` can be equipped into `Part` with `partId` or not\"}},\"checkIsEquippableToAll(uint64)\":{\"details\":\"Returns true if part is equippable to all.\",\"params\":{\"partId\":\"ID of the part that we are checking\"},\"returns\":{\"isEquippable\":\"The status indicating whether the part with `partId` can be equipped by any address or not\"}},\"getLock()\":{\"returns\":{\"isLocked\":\"A boolean value signifying whether the smart contract has been locked\"}},\"getMetadataURI()\":{\"returns\":{\"_0\":\"Catalog metadata URI\"}},\"getPart(uint64)\":{\"params\":{\"partId\":\"ID of the part that we are retrieving\"},\"returns\":{\"part\":\"The `Part` struct associated with given `partId`\"}},\"getParts(uint64[])\":{\"params\":{\"partIds\":\"An array of part IDs that we want to retrieve\"},\"returns\":{\"parts\":\"An array of `Part` structs associated with given `partIds`\"}},\"getType()\":{\"returns\":{\"_0\":\"`itemType` of the associated Catalog\"}},\"isContributor(address)\":{\"params\":{\"contributor\":\"Address of the contributor whose status we are checking\"},\"returns\":{\"isContributor_\":\"Boolean value indicating whether the address is a contributor or not\"}},\"manageContributor(address,bool)\":{\"details\":\"Can only be called by the owner.Emits ***ContributorUpdate*** event.\",\"params\":{\"contributor\":\"Address of the contributor's account\",\"grantRole\":\"A boolean value signifying whether the contributor role is being granted (`true`) or revoked  (`false`)\"}},\"owner()\":{\"returns\":{\"owner_\":\"Address of the current owner\"}},\"renounceOwnership()\":{\"details\":\"Can only be called by the current owner.Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is  only available to the owner.\"},\"resetEquippableAddresses(uint64)\":{\"details\":\"Can only be called on `Part`s of `Slot` type.\",\"params\":{\"partId\":\"ID of the part that we are clearing the `equippableAddresses` from\"}},\"setEquippableAddresses(uint64,address[])\":{\"details\":\"Overwrites existing `equippableAddresses`.Can only be called on `Part`s of `Slot` type.\",\"params\":{\"equippableAddresses\":\"A full array of addresses that can be equipped into this `Part`\",\"partId\":\"ID of the `Part`s that we are overwiting the `equippableAddresses` for\"}},\"setEquippableToAll(uint64)\":{\"details\":\"Can only be called on `Part`s of `Slot` type.\",\"params\":{\"partId\":\"ID of the `Part` that we are setting as equippable by any address\"}},\"setLock()\":{\"details\":\"Once locked, functions using `notLocked` modifier cannot be executed.Emits ***LockSet*** event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Can only be called by the current owner.\",\"params\":{\"newOwner\":\"Address of the new owner's account\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"RMRKBadConfig()\":[{\"notice\":\"Attempting to incorrectly configue a Catalog item\"}],\"RMRKIdZeroForbidden()\":[{\"notice\":\"Attempting to use ID 0, which is not supported\"}],\"RMRKLocked()\":[{\"notice\":\"Attempting to interact with a contract that had its operation locked\"}],\"RMRKNewContributorIsZeroAddress()\":[{\"notice\":\"Attempting to assign a 0x0 address as a contributor\"}],\"RMRKNewOwnerIsZeroAddress()\":[{\"notice\":\"Attempting to transfer the ownership to the 0x0 address\"}],\"RMRKNotOwner()\":[{\"notice\":\"Attempting to interact with a management function without being the smart contract's owner\"}],\"RMRKNotOwnerOrContributor()\":[{\"notice\":\"Attempting to interact with a function without being the owner or contributor of the collection\"}],\"RMRKPartAlreadyExists()\":[{\"notice\":\"Attempting to add a `Part` with an ID that is already used\"}],\"RMRKPartDoesNotExist()\":[{\"notice\":\"Attempting to use a `Part` that doesn't exist\"}],\"RMRKPartIsNotSlot()\":[{\"notice\":\"Attempting to use a `Part` that is `Fixed` when `Slot` kind of `Part` should be used\"}],\"RMRKZeroLengthIdsPassed()\":[{\"notice\":\"Attempting not to pass an empty array of equippable addresses when adding or setting the equippable addresses\"}]},\"events\":{\"AddedEquippables(uint64,address[])\":{\"notice\":\"Event to announce new equippables to the part.\"},\"AddedPart(uint64,uint8,uint8,address[],string)\":{\"notice\":\"Event to announce addition of a new part.\"},\"ContributorUpdate(address,bool)\":{\"notice\":\"Event that signifies that an address was granted contributor role or that the permission has been  revoked.\"},\"LockSet()\":{\"notice\":\"Emitted when the smart contract is locked.\"},\"OwnershipTransferred(address,address)\":{\"notice\":\"Used to anounce the transfer of ownership.\"},\"SetEquippableToAll(uint64)\":{\"notice\":\"Event to announce that a given part can be equipped by any address.\"},\"SetEquippables(uint64,address[])\":{\"notice\":\"Event to announce the overriding of equippable addresses of the part.\"}},\"kind\":\"user\",\"methods\":{\"addEquippableAddresses(uint64,address[])\":{\"notice\":\"Used to add multiple `equippableAddresses` to a single catalog entry.\"},\"addPart((uint64,(uint8,uint8,address[],string)))\":{\"notice\":\"Used to add a single `Part` to storage.\"},\"addPartList((uint64,(uint8,uint8,address[],string))[])\":{\"notice\":\"Used to add multiple `Part`s to storage.\"},\"checkIsEquippable(uint64,address)\":{\"notice\":\"Used to check whether the given address is allowed to equip the desired `Part`.\"},\"checkIsEquippableToAll(uint64)\":{\"notice\":\"Used to check if the part is equippable by all addresses.\"},\"getLock()\":{\"notice\":\"Used to retrieve the status of a lockable smart contract.\"},\"getMetadataURI()\":{\"notice\":\"Used to return the metadata URI of the associated Catalog.\"},\"getPart(uint64)\":{\"notice\":\"Used to retrieve a `Part` with id `partId`\"},\"getParts(uint64[])\":{\"notice\":\"Used to retrieve multiple parts at the same time.\"},\"getType()\":{\"notice\":\"Used to return the `itemType` of the associated Catalog\"},\"isContributor(address)\":{\"notice\":\"Used to check if the address is one of the contributors.\"},\"manageContributor(address,bool)\":{\"notice\":\"Adds or removes a contributor to the smart contract.\"},\"owner()\":{\"notice\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"notice\":\"Leaves the contract without owner. Functions using the `onlyOwner` modifier will be disabled.\"},\"resetEquippableAddresses(uint64)\":{\"notice\":\"Used to remove all of the `equippableAddresses` for a `Part` associated with the `partId`.\"},\"setEquippableAddresses(uint64,address[])\":{\"notice\":\"Function used to set the new list of `equippableAddresses`.\"},\"setEquippableToAll(uint64)\":{\"notice\":\"Sets the isEquippableToAll flag to true, meaning that any collection may be equipped into the `Part` with  this `partId`.\"},\"setLock()\":{\"notice\":\"Locks the operation.\"},\"transferOwnership(address)\":{\"notice\":\"Transfers ownership of the contract to a new owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/RMRKCatalog.sol\":\"RMRKNFTCatalog\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=../node_modules/@openzeppelin/\",\":@rmrk-team/evm-contracts/contracts/=../node_modules/@rmrk-team/evm-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"../node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"../node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"../node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"../node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"../node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"../node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/access/Ownable.sol\":{\"keccak256\":\"0x6dc35e06b96c85802afd347886e870783e60316bebc683ec6da1b1c0b7c1bceb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c54f2c590860475e225698b70377acf9bacae59e322d16d7a9dbfe814a2aaa\",\"dweb:/ipfs/QmT2pmwp7V78BM3S6KfHY12W2rRmhthDWofDraQqh4vcMz\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/access/OwnableLock.sol\":{\"keccak256\":\"0x89cd0b2c9bebeb087f2c94353b590d44e007d9658d17ade7623684af82588d4d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e7da5ba8ea89f93e215799cfbc868881a222611ef34f4643df125a2fbb46be30\",\"dweb:/ipfs/QmRKkBKghCynhf5UTNbGFxQKdttQ4VgTF1AW9EZNpv7SRp\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/catalog/IRMRKCatalog.sol\":{\"keccak256\":\"0xb0621819f76885339d08d349c2ddb64b9cec91fe0d5ae6051b6ff459f535d899\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://747d82acd754d7bf967c2251e4a65900faa780aeb57b11179a8c50d51b0a9b3e\",\"dweb:/ipfs/QmQ1qsrSCZK555gFdN5mtChrkVQAmYQUS1NNPKCNTw1oYf\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/catalog/RMRKCatalog.sol\":{\"keccak256\":\"0xfeb33889782d7c539a2f93e04ba605fe72cfddbad3ecc95366626ca0cb650f05\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://77a5c09863c22b0e9632b12b4275499879c6d7175a6d47d3a5d31d515cd381e2\",\"dweb:/ipfs/QmQTk2HCjBS7ZCRp1N5YnjAbJphXCwUX28isqzNZ74tjDq\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/core/RMRKCore.sol\":{\"keccak256\":\"0x4d289094c06de5e3e7cf4e7ae183a027ebf0c09bc522175088c83a8bb09bc667\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02f01404786b5930a11d7153ba5125c4a14908e1c9da5cb7ab833e750ba7df26\",\"dweb:/ipfs/QmWptEJYzyF1vwcfs92NDb9S4DhKkLKCQzEV6pNqox3mv9\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/equippable/IERC6220.sol\":{\"keccak256\":\"0xfeb500e7cede261f777d1198d27223f115cc7d35cb4156b93800951c3679133b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d6729839ec67646bbc6dbedbc5d4ec258fb882f63ac61a52a56d316b6299d027\",\"dweb:/ipfs/Qmd925sXHn5oe9x65MvT14v1uL4eHeMQmbK6zkdPgmVNAB\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/equippable/RMRKEquippable.sol\":{\"keccak256\":\"0xec4a276f3dc575d3507d8f1e5676d366dc6db0d2bb3f4bcfaca5af06973930c9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d0f60e07cde6400539596c0b2de8bbf6f02581689785e43b98bc213e3ac70fb5\",\"dweb:/ipfs/QmW8p3qNY3A3umo9XcFmrTMuot2yYSfs3bFdzungZjjCkH\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/extension/soulbound/IERC6454.sol\":{\"keccak256\":\"0x1186beae10cb1c72460d3c055a03beb39838aba9026766a97e2ea3d98269eba3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://58b07e4078063e28ccaac79f2ca8456d587521c3fae41d892593ce3b3ca33210\",\"dweb:/ipfs/Qmam91E8MFvyYiEcUv5x72yiNp95TeSNjiZSY9dj73fgbW\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/library/RMRKErrors.sol\":{\"keccak256\":\"0xa0732f20e0c3b8fda991fd3794c0651f1d493fe4b8cb29f9335780f7192d40f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02c6cb8e84411b96e187a3743fbfb7c6f092fbb6aab35f71d8bf0bbb22635837\",\"dweb:/ipfs/QmTxoTUjumx2TEBus9gyiRmWcbAEBkTqdmsiTXio8rhbHe\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/library/RMRKLib.sol\":{\"keccak256\":\"0x1abe0b76ddbdc1da34c3ce5622e5d648efab5188c9868419a951c2c81edaeb6c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5d07b40ae3c5dea736588afcf9438aa026ed97ac57ac8bf4088e3f8eae1a5d18\",\"dweb:/ipfs/QmaiP2u3w23kxaNo1huRRBr4tzAXsfTQbMSs7y18k3E9nv\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/multiasset/AbstractMultiAsset.sol\":{\"keccak256\":\"0xed65beaf1912ccaa61d0c637395f4810f4faa6e83bab2a19e2c74dd0d8c44dbf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2ca5007aff0be4fb0a4fac26502a4d10ed2e79c7fdabb5f20c34ae3bfca50a34\",\"dweb:/ipfs/QmXRawUUazTfUSw4ijGaUMLr12JxPq3BCmkzuZPSogaBrh\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/multiasset/IERC5773.sol\":{\"keccak256\":\"0x98cff205d4c5b15ef0d016ef5ce5f3f45320fd2d0e110989693f0e8d87f89d95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d3dbcc2509c0043eb349bc677b4e54c5027e88a95d0810c53ff385c8ecf210a3\",\"dweb:/ipfs/QmZSUbLtU2TLTuYudJmDcbSK8sF7bmRaRoPEX7BzQDtSh6\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/nestable/IERC7401.sol\":{\"keccak256\":\"0x1940ef9bbb9bc4d137ec2d7b76f4449c4463540a4437b5566650f7868408c627\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a24ec8047ff9cc12c3b44fbc7178327698d932df5c5976bd50599014123cc5c\",\"dweb:/ipfs/QmRdk8ZZodLaDnCZ3PNTug5xFV5mGBwLuoDmVujehnW9o8\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/nestable/RMRKNestable.sol\":{\"keccak256\":\"0x0b13754204616f7b13cc8e4aa39b9ba3b719067db2ff6b0b522dc570e4d38596\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://797bfedb0c8278c42d1051bcf15375dc5c4571ebbb3a6dec8c663397d332333d\",\"dweb:/ipfs/QmRUNepMeP573ypxmDhADwdfwRfa6bpoygAL9i1KYy3fY6\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x14a91bf4e2ca7a5423b903c551aedb08c98f9d089e429998f9711286c0c17882\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e07319bbc8447047f9fa596d1af95ab5d235661b5f48159eaee6144d45261f0\",\"dweb:/ipfs/QmdAvUL5jmAx9ExoyR6199KUmkXfd8q4SfBuvJXygKHNbx\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/IRMRKCollectionData.sol\":{\"keccak256\":\"0xf80cced6bc3e1500802a718fe6ea9ddf443e5bf10eec41ae65a5960d672c2359\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://03690224c3141c4ba89522df2a5696f5f11b06210daa882ea0d38283677b51d1\",\"dweb:/ipfs/QmYJHWBJG8tJ9CwAbX1i3Y6H1BQC3wtje3Arb2hxJ2cu83\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/RMRKEquipRenderUtils.sol\":{\"keccak256\":\"0xb00701869ee6f57ed9f8f321f58f179b42417edbaa4c52dfc04de18d02544f22\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa31f2ee48ed37c0e14d339f853c7797966151aa7e9134bd25db4794330e0d28\",\"dweb:/ipfs/QmdPqkifXwec8e1AF4FSvPEFGPzpDfHe2VtET2NEZJoSiq\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/RMRKMultiAssetRenderUtils.sol\":{\"keccak256\":\"0x63f226bd0241165d8f7595760f9c754d1fbed5e0e7396b512c02b100513c7b40\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9975143019fcce93e9e2f6edcfdbcdb2cd139f6728ccf277fe84a92ffbf8617b\",\"dweb:/ipfs/QmVj4D4gmZig12XBu1mgeVGyknJMm3vpoPeRRsmK3nyd2u\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/RMRKNestableRenderUtils.sol\":{\"keccak256\":\"0xa042e6e59d7f58e668dd92e8da5f3ea3d475d6fe86f2bc0a074e65d9ae0ed2c8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6ce0d88af3e51d65397b90461776c69d938511ecb604e7022f9f00ebfbc17cba\",\"dweb:/ipfs/QmVFmnwsEoM5CghDD2joM7nMoAEudaTMPnvcywVAVNoZGo\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/RMRKRenderUtils.sol\":{\"keccak256\":\"0x74e145d9a9324c7e1f4ada01dc9135b4bdaa3399a5899892caf5f4e075159152\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4c84cc798a74a65d81e035d91dbb3cfacefd2cc85b25c64260ede2d56f0b8a74\",\"dweb:/ipfs/Qmc4ZZWX7jXmL4nYgw9JRN7QXXSrqYHdg3vKhs2HDBMgpq\"]},\"../node_modules/@rmrk-team/evm-contracts/contracts/implementations/RMRKCatalogImpl.sol\":{\"keccak256\":\"0xf0bfe6f2fe39814e97a95113fa334bd09d3b176346ba2d4ce1ef801d1afe2c4b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3aaf42dd550599b3eba4cf386a6599facfafcb91eabb9a02bbcbf85d3d491dee\",\"dweb:/ipfs/QmPeUKPpL9GMgKGHVPVeSCVDDAfLTg1H1c3dsvxYHH9G98\"]},\"src/RMRKCatalog.sol\":{\"keccak256\":\"0x15614a26a06b04b100f64c297cd11b6ea48b1dea6b0b144bba67ed22be234e04\",\"license\":\"GNU GPLv3\",\"urls\":[\"bzz-raw://d262a12e5a9d568962540c4be10f54b662f1dfa7c89f9db90223211499fcf739\",\"dweb:/ipfs/QmUVZbkBWM4FkNzkLeRtosgdVv8A8Tt3Va77srFWsHvdFJ\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.23+commit.f704f362" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            },
            { "internalType": "string", "name": "type_", "type": "string" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        { "inputs": [], "type": "error", "name": "RMRKBadConfig" },
        { "inputs": [], "type": "error", "name": "RMRKIdZeroForbidden" },
        { "inputs": [], "type": "error", "name": "RMRKLocked" },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNewContributorIsZeroAddress"
        },
        { "inputs": [], "type": "error", "name": "RMRKNewOwnerIsZeroAddress" },
        { "inputs": [], "type": "error", "name": "RMRKNotOwner" },
        { "inputs": [], "type": "error", "name": "RMRKNotOwnerOrContributor" },
        { "inputs": [], "type": "error", "name": "RMRKPartAlreadyExists" },
        { "inputs": [], "type": "error", "name": "RMRKPartDoesNotExist" },
        { "inputs": [], "type": "error", "name": "RMRKPartIsNotSlot" },
        { "inputs": [], "type": "error", "name": "RMRKZeroLengthIdsPassed" },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "partId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "address[]",
              "name": "equippableAddresses",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddedEquippables",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "partId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "enum IRMRKCatalog.ItemType",
              "name": "itemType",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "uint8",
              "name": "zIndex",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "equippableAddresses",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddedPart",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contributor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "isContributor",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContributorUpdate",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "LockSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "partId",
              "type": "uint64",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SetEquippableToAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "partId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "address[]",
              "name": "equippableAddresses",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetEquippables",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint64", "name": "partId", "type": "uint64" },
            {
              "internalType": "address[]",
              "name": "equippableAddresses",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addEquippableAddresses"
        },
        {
          "inputs": [
            {
              "internalType": "struct IRMRKCatalog.IntakeStruct",
              "name": "intakeStruct",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "partId",
                  "type": "uint64"
                },
                {
                  "internalType": "struct IRMRKCatalog.Part",
                  "name": "part",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum IRMRKCatalog.ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    { "internalType": "uint8", "name": "z", "type": "uint8" },
                    {
                      "internalType": "address[]",
                      "name": "equippable",
                      "type": "address[]"
                    },
                    {
                      "internalType": "string",
                      "name": "metadataURI",
                      "type": "string"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addPart"
        },
        {
          "inputs": [
            {
              "internalType": "struct IRMRKCatalog.IntakeStruct[]",
              "name": "intakeStructs",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "partId",
                  "type": "uint64"
                },
                {
                  "internalType": "struct IRMRKCatalog.Part",
                  "name": "part",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum IRMRKCatalog.ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    { "internalType": "uint8", "name": "z", "type": "uint8" },
                    {
                      "internalType": "address[]",
                      "name": "equippable",
                      "type": "address[]"
                    },
                    {
                      "internalType": "string",
                      "name": "metadataURI",
                      "type": "string"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addPartList"
        },
        {
          "inputs": [
            { "internalType": "uint64", "name": "partId", "type": "uint64" },
            {
              "internalType": "address",
              "name": "targetAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkIsEquippable",
          "outputs": [
            { "internalType": "bool", "name": "isEquippable", "type": "bool" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint64", "name": "partId", "type": "uint64" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkIsEquippableToAll",
          "outputs": [
            { "internalType": "bool", "name": "isEquippable", "type": "bool" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLock",
          "outputs": [
            { "internalType": "bool", "name": "isLocked", "type": "bool" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMetadataURI",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint64", "name": "partId", "type": "uint64" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPart",
          "outputs": [
            {
              "internalType": "struct IRMRKCatalog.Part",
              "name": "part",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum IRMRKCatalog.ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                { "internalType": "uint8", "name": "z", "type": "uint8" },
                {
                  "internalType": "address[]",
                  "name": "equippable",
                  "type": "address[]"
                },
                {
                  "internalType": "string",
                  "name": "metadataURI",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64[]",
              "name": "partIds",
              "type": "uint64[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getParts",
          "outputs": [
            {
              "internalType": "struct IRMRKCatalog.Part[]",
              "name": "parts",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum IRMRKCatalog.ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                { "internalType": "uint8", "name": "z", "type": "uint8" },
                {
                  "internalType": "address[]",
                  "name": "equippable",
                  "type": "address[]"
                },
                {
                  "internalType": "string",
                  "name": "metadataURI",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getType",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contributor",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isContributor",
          "outputs": [
            { "internalType": "bool", "name": "isContributor_", "type": "bool" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contributor",
              "type": "address"
            },
            { "internalType": "bool", "name": "grantRole", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "manageContributor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "owner_", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            { "internalType": "uint64", "name": "partId", "type": "uint64" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resetEquippableAddresses"
        },
        {
          "inputs": [
            { "internalType": "uint64", "name": "partId", "type": "uint64" },
            {
              "internalType": "address[]",
              "name": "equippableAddresses",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setEquippableAddresses"
        },
        {
          "inputs": [
            { "internalType": "uint64", "name": "partId", "type": "uint64" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setEquippableToAll"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLock"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addEquippableAddresses(uint64,address[])": {
            "details": "Can only be called on `Part`s of `Slot` type.",
            "params": {
              "equippableAddresses": "An array of addresses that can be equipped into the `Part` associated with the `partId`",
              "partId": "ID of the `Part` that we are adding the equippable addresses to"
            }
          },
          "addPart((uint64,(uint8,uint8,address[],string)))": {
            "details": "The full `IntakeStruct` looks like this:  [          partID,      [          itemType,          z,          [               permittedCollectionAddress0,               permittedCollectionAddress1,               permittedCollectionAddress2           ],           metadataURI       ]   ]",
            "params": {
              "intakeStruct": "`IntakeStruct` struct consisting of `partId` and a nested `Part` struct"
            }
          },
          "addPartList((uint64,(uint8,uint8,address[],string))[])": {
            "details": "The full `IntakeStruct` looks like this:  [          partID,      [          itemType,          z,          [               permittedCollectionAddress0,               permittedCollectionAddress1,               permittedCollectionAddress2           ],           metadataURI       ]   ]",
            "params": {
              "intakeStructs": "[] An array of `IntakeStruct` structs consisting of `partId` and a nested `Part` struct"
            }
          },
          "checkIsEquippable(uint64,address)": {
            "details": "Returns true if a collection may equip asset with `partId`.",
            "params": {
              "partId": "The ID of the part that we are checking",
              "targetAddress": "The address that we are checking for whether the part can be equipped into it or not"
            },
            "returns": {
              "isEquippable": "The status indicating whether the `targetAddress` can be equipped into `Part` with `partId` or not"
            }
          },
          "checkIsEquippableToAll(uint64)": {
            "details": "Returns true if part is equippable to all.",
            "params": { "partId": "ID of the part that we are checking" },
            "returns": {
              "isEquippable": "The status indicating whether the part with `partId` can be equipped by any address or not"
            }
          },
          "getLock()": {
            "returns": {
              "isLocked": "A boolean value signifying whether the smart contract has been locked"
            }
          },
          "getMetadataURI()": { "returns": { "_0": "Catalog metadata URI" } },
          "getPart(uint64)": {
            "params": { "partId": "ID of the part that we are retrieving" },
            "returns": {
              "part": "The `Part` struct associated with given `partId`"
            }
          },
          "getParts(uint64[])": {
            "params": {
              "partIds": "An array of part IDs that we want to retrieve"
            },
            "returns": {
              "parts": "An array of `Part` structs associated with given `partIds`"
            }
          },
          "getType()": {
            "returns": { "_0": "`itemType` of the associated Catalog" }
          },
          "isContributor(address)": {
            "params": {
              "contributor": "Address of the contributor whose status we are checking"
            },
            "returns": {
              "isContributor_": "Boolean value indicating whether the address is a contributor or not"
            }
          },
          "manageContributor(address,bool)": {
            "details": "Can only be called by the owner.Emits ***ContributorUpdate*** event.",
            "params": {
              "contributor": "Address of the contributor's account",
              "grantRole": "A boolean value signifying whether the contributor role is being granted (`true`) or revoked  (`false`)"
            }
          },
          "owner()": {
            "returns": { "owner_": "Address of the current owner" }
          },
          "renounceOwnership()": {
            "details": "Can only be called by the current owner.Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is  only available to the owner."
          },
          "resetEquippableAddresses(uint64)": {
            "details": "Can only be called on `Part`s of `Slot` type.",
            "params": {
              "partId": "ID of the part that we are clearing the `equippableAddresses` from"
            }
          },
          "setEquippableAddresses(uint64,address[])": {
            "details": "Overwrites existing `equippableAddresses`.Can only be called on `Part`s of `Slot` type.",
            "params": {
              "equippableAddresses": "A full array of addresses that can be equipped into this `Part`",
              "partId": "ID of the `Part`s that we are overwiting the `equippableAddresses` for"
            }
          },
          "setEquippableToAll(uint64)": {
            "details": "Can only be called on `Part`s of `Slot` type.",
            "params": {
              "partId": "ID of the `Part` that we are setting as equippable by any address"
            }
          },
          "setLock()": {
            "details": "Once locked, functions using `notLocked` modifier cannot be executed.Emits ***LockSet*** event."
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "transferOwnership(address)": {
            "details": "Can only be called by the current owner.",
            "params": { "newOwner": "Address of the new owner's account" }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addEquippableAddresses(uint64,address[])": {
            "notice": "Used to add multiple `equippableAddresses` to a single catalog entry."
          },
          "addPart((uint64,(uint8,uint8,address[],string)))": {
            "notice": "Used to add a single `Part` to storage."
          },
          "addPartList((uint64,(uint8,uint8,address[],string))[])": {
            "notice": "Used to add multiple `Part`s to storage."
          },
          "checkIsEquippable(uint64,address)": {
            "notice": "Used to check whether the given address is allowed to equip the desired `Part`."
          },
          "checkIsEquippableToAll(uint64)": {
            "notice": "Used to check if the part is equippable by all addresses."
          },
          "getLock()": {
            "notice": "Used to retrieve the status of a lockable smart contract."
          },
          "getMetadataURI()": {
            "notice": "Used to return the metadata URI of the associated Catalog."
          },
          "getPart(uint64)": {
            "notice": "Used to retrieve a `Part` with id `partId`"
          },
          "getParts(uint64[])": {
            "notice": "Used to retrieve multiple parts at the same time."
          },
          "getType()": {
            "notice": "Used to return the `itemType` of the associated Catalog"
          },
          "isContributor(address)": {
            "notice": "Used to check if the address is one of the contributors."
          },
          "manageContributor(address,bool)": {
            "notice": "Adds or removes a contributor to the smart contract."
          },
          "owner()": { "notice": "Returns the address of the current owner." },
          "renounceOwnership()": {
            "notice": "Leaves the contract without owner. Functions using the `onlyOwner` modifier will be disabled."
          },
          "resetEquippableAddresses(uint64)": {
            "notice": "Used to remove all of the `equippableAddresses` for a `Part` associated with the `partId`."
          },
          "setEquippableAddresses(uint64,address[])": {
            "notice": "Function used to set the new list of `equippableAddresses`."
          },
          "setEquippableToAll(uint64)": {
            "notice": "Sets the isEquippableToAll flag to true, meaning that any collection may be equipped into the `Part` with  this `partId`."
          },
          "setLock()": { "notice": "Locks the operation." },
          "transferOwnership(address)": {
            "notice": "Transfers ownership of the contract to a new owner."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=../node_modules/@openzeppelin/",
        "@rmrk-team/evm-contracts/contracts/=../node_modules/@rmrk-team/evm-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/RMRKCatalog.sol": "RMRKNFTCatalog" },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "../node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
        "urls": [
          "bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
          "dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
        ],
        "license": "MIT"
      },
      "../node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49",
        "urls": [
          "bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22",
          "dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i"
        ],
        "license": "MIT"
      },
      "../node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
        "urls": [
          "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
          "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
        ],
        "license": "MIT"
      },
      "../node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "../node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "../node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/access/Ownable.sol": {
        "keccak256": "0x6dc35e06b96c85802afd347886e870783e60316bebc683ec6da1b1c0b7c1bceb",
        "urls": [
          "bzz-raw://54c54f2c590860475e225698b70377acf9bacae59e322d16d7a9dbfe814a2aaa",
          "dweb:/ipfs/QmT2pmwp7V78BM3S6KfHY12W2rRmhthDWofDraQqh4vcMz"
        ],
        "license": "Apache-2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/access/OwnableLock.sol": {
        "keccak256": "0x89cd0b2c9bebeb087f2c94353b590d44e007d9658d17ade7623684af82588d4d",
        "urls": [
          "bzz-raw://e7da5ba8ea89f93e215799cfbc868881a222611ef34f4643df125a2fbb46be30",
          "dweb:/ipfs/QmRKkBKghCynhf5UTNbGFxQKdttQ4VgTF1AW9EZNpv7SRp"
        ],
        "license": "Apache-2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/catalog/IRMRKCatalog.sol": {
        "keccak256": "0xb0621819f76885339d08d349c2ddb64b9cec91fe0d5ae6051b6ff459f535d899",
        "urls": [
          "bzz-raw://747d82acd754d7bf967c2251e4a65900faa780aeb57b11179a8c50d51b0a9b3e",
          "dweb:/ipfs/QmQ1qsrSCZK555gFdN5mtChrkVQAmYQUS1NNPKCNTw1oYf"
        ],
        "license": "Apache-2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/catalog/RMRKCatalog.sol": {
        "keccak256": "0xfeb33889782d7c539a2f93e04ba605fe72cfddbad3ecc95366626ca0cb650f05",
        "urls": [
          "bzz-raw://77a5c09863c22b0e9632b12b4275499879c6d7175a6d47d3a5d31d515cd381e2",
          "dweb:/ipfs/QmQTk2HCjBS7ZCRp1N5YnjAbJphXCwUX28isqzNZ74tjDq"
        ],
        "license": "Apache-2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/core/RMRKCore.sol": {
        "keccak256": "0x4d289094c06de5e3e7cf4e7ae183a027ebf0c09bc522175088c83a8bb09bc667",
        "urls": [
          "bzz-raw://02f01404786b5930a11d7153ba5125c4a14908e1c9da5cb7ab833e750ba7df26",
          "dweb:/ipfs/QmWptEJYzyF1vwcfs92NDb9S4DhKkLKCQzEV6pNqox3mv9"
        ],
        "license": "Apache-2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/equippable/IERC6220.sol": {
        "keccak256": "0xfeb500e7cede261f777d1198d27223f115cc7d35cb4156b93800951c3679133b",
        "urls": [
          "bzz-raw://d6729839ec67646bbc6dbedbc5d4ec258fb882f63ac61a52a56d316b6299d027",
          "dweb:/ipfs/Qmd925sXHn5oe9x65MvT14v1uL4eHeMQmbK6zkdPgmVNAB"
        ],
        "license": "Apache-2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/equippable/RMRKEquippable.sol": {
        "keccak256": "0xec4a276f3dc575d3507d8f1e5676d366dc6db0d2bb3f4bcfaca5af06973930c9",
        "urls": [
          "bzz-raw://d0f60e07cde6400539596c0b2de8bbf6f02581689785e43b98bc213e3ac70fb5",
          "dweb:/ipfs/QmW8p3qNY3A3umo9XcFmrTMuot2yYSfs3bFdzungZjjCkH"
        ],
        "license": "Apache-2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/extension/soulbound/IERC6454.sol": {
        "keccak256": "0x1186beae10cb1c72460d3c055a03beb39838aba9026766a97e2ea3d98269eba3",
        "urls": [
          "bzz-raw://58b07e4078063e28ccaac79f2ca8456d587521c3fae41d892593ce3b3ca33210",
          "dweb:/ipfs/Qmam91E8MFvyYiEcUv5x72yiNp95TeSNjiZSY9dj73fgbW"
        ],
        "license": "Apache-2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/library/RMRKErrors.sol": {
        "keccak256": "0xa0732f20e0c3b8fda991fd3794c0651f1d493fe4b8cb29f9335780f7192d40f8",
        "urls": [
          "bzz-raw://02c6cb8e84411b96e187a3743fbfb7c6f092fbb6aab35f71d8bf0bbb22635837",
          "dweb:/ipfs/QmTxoTUjumx2TEBus9gyiRmWcbAEBkTqdmsiTXio8rhbHe"
        ],
        "license": "Apache-2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/library/RMRKLib.sol": {
        "keccak256": "0x1abe0b76ddbdc1da34c3ce5622e5d648efab5188c9868419a951c2c81edaeb6c",
        "urls": [
          "bzz-raw://5d07b40ae3c5dea736588afcf9438aa026ed97ac57ac8bf4088e3f8eae1a5d18",
          "dweb:/ipfs/QmaiP2u3w23kxaNo1huRRBr4tzAXsfTQbMSs7y18k3E9nv"
        ],
        "license": "Apache-2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/multiasset/AbstractMultiAsset.sol": {
        "keccak256": "0xed65beaf1912ccaa61d0c637395f4810f4faa6e83bab2a19e2c74dd0d8c44dbf",
        "urls": [
          "bzz-raw://2ca5007aff0be4fb0a4fac26502a4d10ed2e79c7fdabb5f20c34ae3bfca50a34",
          "dweb:/ipfs/QmXRawUUazTfUSw4ijGaUMLr12JxPq3BCmkzuZPSogaBrh"
        ],
        "license": "Apache-2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/multiasset/IERC5773.sol": {
        "keccak256": "0x98cff205d4c5b15ef0d016ef5ce5f3f45320fd2d0e110989693f0e8d87f89d95",
        "urls": [
          "bzz-raw://d3dbcc2509c0043eb349bc677b4e54c5027e88a95d0810c53ff385c8ecf210a3",
          "dweb:/ipfs/QmZSUbLtU2TLTuYudJmDcbSK8sF7bmRaRoPEX7BzQDtSh6"
        ],
        "license": "Apache-2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/nestable/IERC7401.sol": {
        "keccak256": "0x1940ef9bbb9bc4d137ec2d7b76f4449c4463540a4437b5566650f7868408c627",
        "urls": [
          "bzz-raw://5a24ec8047ff9cc12c3b44fbc7178327698d932df5c5976bd50599014123cc5c",
          "dweb:/ipfs/QmRdk8ZZodLaDnCZ3PNTug5xFV5mGBwLuoDmVujehnW9o8"
        ],
        "license": "Apache-2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/nestable/RMRKNestable.sol": {
        "keccak256": "0x0b13754204616f7b13cc8e4aa39b9ba3b719067db2ff6b0b522dc570e4d38596",
        "urls": [
          "bzz-raw://797bfedb0c8278c42d1051bcf15375dc5c4571ebbb3a6dec8c663397d332333d",
          "dweb:/ipfs/QmRUNepMeP573ypxmDhADwdfwRfa6bpoygAL9i1KYy3fY6"
        ],
        "license": "Apache-2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/security/ReentrancyGuard.sol": {
        "keccak256": "0x14a91bf4e2ca7a5423b903c551aedb08c98f9d089e429998f9711286c0c17882",
        "urls": [
          "bzz-raw://4e07319bbc8447047f9fa596d1af95ab5d235661b5f48159eaee6144d45261f0",
          "dweb:/ipfs/QmdAvUL5jmAx9ExoyR6199KUmkXfd8q4SfBuvJXygKHNbx"
        ],
        "license": "MIT"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/IRMRKCollectionData.sol": {
        "keccak256": "0xf80cced6bc3e1500802a718fe6ea9ddf443e5bf10eec41ae65a5960d672c2359",
        "urls": [
          "bzz-raw://03690224c3141c4ba89522df2a5696f5f11b06210daa882ea0d38283677b51d1",
          "dweb:/ipfs/QmYJHWBJG8tJ9CwAbX1i3Y6H1BQC3wtje3Arb2hxJ2cu83"
        ],
        "license": "Apache 2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/RMRKEquipRenderUtils.sol": {
        "keccak256": "0xb00701869ee6f57ed9f8f321f58f179b42417edbaa4c52dfc04de18d02544f22",
        "urls": [
          "bzz-raw://fa31f2ee48ed37c0e14d339f853c7797966151aa7e9134bd25db4794330e0d28",
          "dweb:/ipfs/QmdPqkifXwec8e1AF4FSvPEFGPzpDfHe2VtET2NEZJoSiq"
        ],
        "license": "Apache-2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/RMRKMultiAssetRenderUtils.sol": {
        "keccak256": "0x63f226bd0241165d8f7595760f9c754d1fbed5e0e7396b512c02b100513c7b40",
        "urls": [
          "bzz-raw://9975143019fcce93e9e2f6edcfdbcdb2cd139f6728ccf277fe84a92ffbf8617b",
          "dweb:/ipfs/QmVj4D4gmZig12XBu1mgeVGyknJMm3vpoPeRRsmK3nyd2u"
        ],
        "license": "Apache-2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/RMRKNestableRenderUtils.sol": {
        "keccak256": "0xa042e6e59d7f58e668dd92e8da5f3ea3d475d6fe86f2bc0a074e65d9ae0ed2c8",
        "urls": [
          "bzz-raw://6ce0d88af3e51d65397b90461776c69d938511ecb604e7022f9f00ebfbc17cba",
          "dweb:/ipfs/QmVFmnwsEoM5CghDD2joM7nMoAEudaTMPnvcywVAVNoZGo"
        ],
        "license": "Apache-2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/RMRKRenderUtils.sol": {
        "keccak256": "0x74e145d9a9324c7e1f4ada01dc9135b4bdaa3399a5899892caf5f4e075159152",
        "urls": [
          "bzz-raw://4c84cc798a74a65d81e035d91dbb3cfacefd2cc85b25c64260ede2d56f0b8a74",
          "dweb:/ipfs/Qmc4ZZWX7jXmL4nYgw9JRN7QXXSrqYHdg3vKhs2HDBMgpq"
        ],
        "license": "Apache-2.0"
      },
      "../node_modules/@rmrk-team/evm-contracts/contracts/implementations/RMRKCatalogImpl.sol": {
        "keccak256": "0xf0bfe6f2fe39814e97a95113fa334bd09d3b176346ba2d4ce1ef801d1afe2c4b",
        "urls": [
          "bzz-raw://3aaf42dd550599b3eba4cf386a6599facfafcb91eabb9a02bbcbf85d3d491dee",
          "dweb:/ipfs/QmPeUKPpL9GMgKGHVPVeSCVDDAfLTg1H1c3dsvxYHH9G98"
        ],
        "license": "Apache-2.0"
      },
      "src/RMRKCatalog.sol": {
        "keccak256": "0x15614a26a06b04b100f64c297cd11b6ea48b1dea6b0b144bba67ed22be234e04",
        "urls": [
          "bzz-raw://d262a12e5a9d568962540c4be10f54b662f1dfa7c89f9db90223211499fcf739",
          "dweb:/ipfs/QmUVZbkBWM4FkNzkLeRtosgdVv8A8Tt3Va77srFWsHvdFJ"
        ],
        "license": "GNU GPLv3"
      }
    },
    "version": 1
  },
  "id": 48
}
